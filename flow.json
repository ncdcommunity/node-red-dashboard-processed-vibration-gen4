[
    {
        "id": "74f0f072aba2913a",
        "type": "subflow",
        "name": "gen4-dashboard",
        "info": "",
        "category": "NCD",
        "in": [
            {
                "x": 160,
                "y": 360,
                "wires": [
                    {
                        "id": "81f334edf28ccfec"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "PATH_",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-save",
                    "label": {
                        "en-US": "Enter Custom Path"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red/status.svg",
        "status": {
            "x": 2100,
            "y": 220,
            "wires": [
                {
                    "id": "94c148c092e118c9",
                    "port": 0
                },
                {
                    "id": "f01b23123fb10dc0",
                    "port": 0
                },
                {
                    "id": "52e63acbd5ca0a1c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9df5f842d86ebdc3",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 82",
        "mode": "link",
        "links": [
            "90e6192d9b4e41a2"
        ],
        "x": 3035,
        "y": 940,
        "wires": []
    },
    {
        "id": "eac3342a63c9c339",
        "type": "file in",
        "z": "74f0f072aba2913a",
        "name": "path",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2260,
        "y": 800,
        "wires": [
            [
                "36d7973ba015e7d7"
            ]
        ]
    },
    {
        "id": "36d7973ba015e7d7",
        "type": "csv",
        "z": "74f0f072aba2913a",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2380,
        "y": 800,
        "wires": [
            [
                "56d2e769562a7aaa"
            ]
        ]
    },
    {
        "id": "1f6559139804902b",
        "type": "file",
        "z": "74f0f072aba2913a",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1840,
        "y": 340,
        "wires": [
            [
                "03710a0000088f24",
                "52e63acbd5ca0a1c"
            ]
        ]
    },
    {
        "id": "f836069cca588dd6",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "track-unique-mac",
        "func": "/**\n * Node-RED function to track unique MAC addresses and count occurrences.\n * Stores MAC addresses in a single flow array and maintains a counter.\n * Returns msg with mac_counter and newdevice properties.\n * \n * @param {Object} msg - Node-RED message object with payload.addr (MAC address)\n * @returns {Object} msg - Updated message with mac_counter and newdevice\n */\n\n// Configuration\nconst MAX_MAC_ADDRESSES = 128; // Prevent unbounded growth\n\n// Normalize MAC address (e.g., lowercase for consistent comparison)\nconst newMAC = msg.payload.addr;\nconst type = msg.payload.sensor_type;\n// Initialize flow storage for MAC addresses and counter\nlet macAddresses = flow.get('mac_addresses_114') || [];\nlet count = flow.get('mac_count_114') || 0;\n\n// Check if MAC address already exists\nconst existingEntry = macAddresses.find(entry => entry.mac === newMAC);\n\nif (existingEntry) {\n    // MAC address already exists\n    msg.mac_counter = count;\n    msg.new_device = false;\n} else {\n    // New MAC address\n    if (count >= MAX_MAC_ADDRESSES) {\n        msg.mac_counter = count;\n        msg.newdevice = false;\n    } else {\n        macAddresses.push({ mac: newMAC, type: type });\n        count++;\n        flow.set('mac_addresses_114', macAddresses);\n        flow.set('mac_count_114', count);\n        msg.mac_counter = count;\n        msg.new_device = true;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 340,
        "wires": [
            [
                "b457a299a81dbdba",
                "03219aa1fbb6283d"
            ]
        ]
    },
    {
        "id": "b457a299a81dbdba",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "populate-options",
        "func": "/**\n * Node-RED function to populate msg.options with an array of stored MAC addresses.\n * Retrieves MAC addresses from a single flow storage key ('macAddresses').\n * \n * @param {Object} msg - Node-RED message object with mac_counter property\n * @returns {Object} msg - Updated message with options array containing MAC addresses\n */\n\n// Retrieve MAC addresses from flow storage\nconst macAddresses = flow.get('mac_addresses_114') || [];\n\n// Ensure mac_counter is valid and does not exceed stored array length\nconst count = Math.min(Math.max(0, msg.mac_counter || 0), macAddresses.length);\n\n// Populate options array with just the MAC addresses\nmsg.options = macAddresses.slice(0, count).map(entry => entry.mac);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 340,
        "wires": [
            [
                "0365b767ec461292",
                "7f279c2579d23a36"
            ]
        ]
    },
    {
        "id": "0365b767ec461292",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "mac-selection",
        "property": "payload.addr",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "mac_selection_114",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2640,
        "y": 340,
        "wires": [
            [
                "cb931ebacbea6356"
            ]
        ]
    },
    {
        "id": "3b57d2545e950920",
        "type": "catch",
        "z": "74f0f072aba2913a",
        "name": "",
        "scope": [
            "eac3342a63c9c339",
            "1f6559139804902b"
        ],
        "uncaught": false,
        "x": 1945,
        "y": 220,
        "wires": [
            [
                "f01b23123fb10dc0"
            ]
        ],
        "l": false
    },
    {
        "id": "f01b23123fb10dc0",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "function 42",
        "func": "msg.payload = ({fill: \"red\",text:\"Path error\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1995,
        "y": 220,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "52e63acbd5ca0a1c",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "function 43",
        "func": "msg.payload = ({fill: \"green\",text:\"Saving data\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1995,
        "y": 260,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "716432cd01aaef0e",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "mac-and-date",
        "rules": [
            {
                "t": "set",
                "p": "payload.sensor_data.addr",
                "pt": "msg",
                "to": "$substring(payload.addr, 12)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "date",
                "pt": "msg",
                "to": "$moment(data.received).format(\"YYYY-MM-DD\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.sensor_data.time",
                "pt": "msg",
                "to": "$moment(data.received).format(\"HH:mm:ss\")",
                "tot": "jsonata"
            },
            {
                "t": "move",
                "p": "payload.received",
                "pt": "msg",
                "to": "payload.sensor_data.received",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 340,
        "wires": [
            [
                "8b2cbb3b06e6adac"
            ]
        ]
    },
    {
        "id": "8b2cbb3b06e6adac",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "build-path",
        "func": "let base_path_ = flow.get(\"base_path_114\") || null;\nlet filename = base_path_;\n\nlet type = msg.payload.sensor_data.sensor_type;\nlet addr = msg.payload.sensor_data.addr;\nlet date = msg.date;\nlet base_path = filename;\n\nmsg.filename = base_path + type + \"/\" + addr + \"/\" + date + \".csv\";\nmsg.temp = msg.payload.sensor_data;\nmsg.payload = msg.payload.sensor_data;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 340,
        "wires": [
            [
                "48dac07365feb85b"
            ]
        ]
    },
    {
        "id": "e22033e659ffe6fe",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "set-mac-selection",
        "rules": [
            {
                "t": "set",
                "p": "mac_selection_114",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "mac_counter",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "new_device",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "options",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 800,
        "wires": [
            [
                "590cecb5df53bdbc",
                "fb84cecb800a9c16"
            ]
        ]
    },
    {
        "id": "e4c73b6e503e4d65",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "last(n)Items",
        "func": "const min_time = msg.min_time;\nconst max_time = msg.max_time;\nlet array = msg.payload;\n\nif(min_time && max_time){\n    // Check if msg.payload exists and is an array.\n    if (Array.isArray(msg.payload)) {\n        // Use the .filter() method to create a new array containing only the items\n        // that satisfy the condition.\n        msg.payload = msg.payload.filter(item => {\n            if(item.col5 == 111){\n                // Check if the 'received' property exists and is a number.\n                // This prevents errors if the property is missing or has an unexpected type.\n                if (typeof item.col57 === 'number') {\n                    // Check if the 'received' timestamp is within the defined range (inclusive).\n                    return item.col57 >= min_time && item.col57 <= max_time;\n                } else {\n                    // Log a warning if 'received' property is missing or not a number.\n                    // These items will be excluded from the filtered array.\n                    node.warn(`Item skipped: 'received' property missing or not a number in object`);\n                    return false; // Exclude this item from the filtered array\n                }\n            } else { \n                // Check if the 'received' property exists and is a number.\n                // This prevents errors if the property is missing or has an unexpected type.\n                if (typeof item.col33 === 'number') {\n                    // Check if the 'received' timestamp is within the defined range (inclusive).\n                    return item.col33 >= min_time && item.col33 <= max_time;\n                } else {\n                    // Log a warning if 'received' property is missing or not a number.\n                    // These items will be excluded from the filtered array.\n                    node.warn(`Item skipped: 'received' property missing or not a number in object`);\n                    return false; // Exclude this item from the filtered array\n                }\n            }\n        });\n        array = msg.payload;\n    } else {\n        // If msg.payload is not an array, log a warning and return the original message.\n        node.warn(\"msg.payload is not an array or is missing. No filtering performed.\");\n    }\n} else {\n    msg.payload = msg.payload.slice(-20);\n}\n\nlet msg2 = {}\nmsg2.payload = array[array.length - 1];\nif(!msg2.payload){\n    msg2.payload = {\n        'col33' : '--',\n        'col2' : '--',\n        'col6' : '--',\n        'col32' : '--',\n        'col4' : '--',\n        'col7' : '--',\n        'col8' : '--',\n        'col31': '--',\n        'col9': '--',\n        'col3': '--',\n        'col10': '--',\n        'col57': '--'\n    }\n}\nreturn [msg2, msg];",
        "outputs": 2,
        "timeout": "0",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 800,
        "wires": [
            [
                "27dd3e85f30944eb",
                "18e24138033e4a83",
                "1a58b07348549329",
                "22e1d48c9d31e211",
                "520965335993794e",
                "3ee7be6cba98112e",
                "bfa1413b790ba737",
                "b30913fcb777b369",
                "f6f492c6fdb8c5d6"
            ],
            [
                "3173eb792d02a28b"
            ]
        ]
    },
    {
        "id": "1c0abf3f0a534552",
        "type": "catch",
        "z": "74f0f072aba2913a",
        "name": "",
        "scope": [
            "3688a44d0e4bc27d"
        ],
        "uncaught": false,
        "x": 1910,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "27dd3e85f30944eb",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getBattery",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col3",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 980,
        "wires": [
            [
                "6debd157575965a5"
            ]
        ]
    },
    {
        "id": "3cb42096bbd8e2da",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "filter-sensor-type",
        "property": "payload.sensor_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "110",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "114",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "111",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 510,
        "y": 340,
        "wires": [
            [
                "153918c18472b572"
            ],
            [
                "153918c18472b572"
            ],
            [
                "153918c18472b572"
            ]
        ]
    },
    {
        "id": "94c148c092e118c9",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "name": "link in 81",
        "links": [],
        "x": 1995,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4587f3887649f640",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "name": "link in 82",
        "links": [
            "bf4b9d24d246aee3"
        ],
        "x": 1225,
        "y": 840,
        "wires": [
            [
                "7f279c2579d23a36",
                "dc34c08095c85bfa"
            ]
        ]
    },
    {
        "id": "c8854342c53f8069",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "actual-selection",
        "func": "var actualMAC = msg.payload;\nvar lastMAC = flow.get(\"last_mac_114\") || false;\nif (actualMAC != lastMAC)\n{\n    flow.set(\"last_mac_114\", actualMAC);\n    msg.toGauges = true;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 800,
        "wires": [
            [
                "e22033e659ffe6fe",
                "c90a63c48f750238"
            ]
        ]
    },
    {
        "id": "6debd157575965a5",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 87",
        "mode": "link",
        "links": [
            "5c1edfa7f95b7f70"
        ],
        "x": 3035,
        "y": 980,
        "wires": []
    },
    {
        "id": "b2398764792b24d8",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"An NCD device with address: \"&(payload.addr)&\" is now connected to the Dashboard! Select it from the Address dropdown\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2440,
        "y": 280,
        "wires": [
            [
                "fce5ab988eb080c3",
                "20f3a8375dcd8c3c"
            ]
        ]
    },
    {
        "id": "7f279c2579d23a36",
        "type": "ui-dropdown",
        "z": "74f0f072aba2913a",
        "group": "63c8e31dd0194b68",
        "name": "",
        "label": "Address",
        "tooltip": "",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "gen4Dropdown",
        "typeIsComboBox": true,
        "msgTrigger": "onChange",
        "x": 1350,
        "y": 800,
        "wires": [
            [
                "c8854342c53f8069",
                "dc34c08095c85bfa"
            ]
        ]
    },
    {
        "id": "03219aa1fbb6283d",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "if-new-device",
        "property": "new_device",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2270,
        "y": 280,
        "wires": [
            [
                "b2398764792b24d8"
            ]
        ]
    },
    {
        "id": "81f334edf28ccfec",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "filter-sensor-data",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensor_data",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensor_mode",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 360,
        "wires": [
            [
                "3cb42096bbd8e2da"
            ],
            [
                "72623cb33785f891"
            ]
        ]
    },
    {
        "id": "92cd678a5eba1e6c",
        "type": "inject",
        "z": "74f0f072aba2913a",
        "name": "",
        "props": [
            {
                "p": "path",
                "v": "PATH_",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 220,
        "y": 220,
        "wires": [
            [
                "6acc3569ff55de06"
            ]
        ]
    },
    {
        "id": "4f91024b6433be37",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "build-payload",
        "rules": [
            {
                "t": "delete",
                "p": "payload.original",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "time",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.battery_percent",
                "pt": "msg",
                "to": "$number(payload.battery_percent)",
                "tot": "jsonata"
            },
            {
                "t": "move",
                "p": "payload.battery_percent",
                "pt": "msg",
                "to": "payload.sensor_data.battery_percent",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.counter",
                "pt": "msg",
                "to": "payload.sensor_data.counter",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.rssi",
                "pt": "msg",
                "to": "payload.sensor_data.rssi",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.firmware",
                "pt": "msg",
                "to": "payload.sensor_data.firmware",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.sensor_type",
                "pt": "msg",
                "to": "payload.sensor_data.sensor_type",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.nodeId",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.battery",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.sensor_type",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.sensor_name",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.type",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.firmware",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 340,
        "wires": [
            [
                "716432cd01aaef0e"
            ]
        ]
    },
    {
        "id": "03710a0000088f24",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "move-payload",
        "rules": [
            {
                "t": "move",
                "p": "temp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "filename",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "columns",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.time",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "date",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "values",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 340,
        "wires": [
            [
                "f836069cca588dd6"
            ]
        ]
    },
    {
        "id": "e283154d6b3771c1",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "build-path-to-load",
        "func": "let base_path = flow.get(\"base_path_114\") || null;\nlet count = flow.get(\"mac_count_114\") || null;\nlet addresses = flow.get(\"mac_addresses_114\") || null;\n\nlet type = {};\nlet addr = msg.payload;\nlet date = msg.date;\n\nfor (let index = 0; index < count; index++) {\n    if (addresses[index].mac == addr){\n        type = addresses[index].type;\n        flow.set(\"type_114\", type);\n    }\n}\nmsg.filename = base_path + type + \"/\" + addr + \"/\" + date + \".csv\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 800,
        "wires": [
            [
                "eac3342a63c9c339",
                "ee0ebbda7a2848c3",
                "3d5e816cc686e2cc"
            ]
        ]
    },
    {
        "id": "590cecb5df53bdbc",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "get-date",
        "rules": [
            {
                "t": "set",
                "p": "date",
                "pt": "msg",
                "to": "$moment(data.received).format(\"YYYY-MM-DD\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 800,
        "wires": [
            [
                "e283154d6b3771c1"
            ]
        ]
    },
    {
        "id": "56d2e769562a7aaa",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "delete",
        "rules": [
            {
                "t": "delete",
                "p": "columns",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "values",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "filename",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "date",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 800,
        "wires": [
            [
                "e4c73b6e503e4d65"
            ]
        ]
    },
    {
        "id": "18e24138033e4a83",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getTemp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col10",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 940,
        "wires": [
            [
                "9df5f842d86ebdc3"
            ]
        ]
    },
    {
        "id": "5d4d25aed1553016",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getODR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col9",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 580,
        "wires": [
            [
                "b4423746c771e773"
            ]
        ]
    },
    {
        "id": "b4423746c771e773",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "bcab298ef595f49d"
        ],
        "x": 3035,
        "y": 580,
        "wires": []
    },
    {
        "id": "cb931ebacbea6356",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "delete",
        "rules": [
            {
                "t": "set",
                "p": "received",
                "pt": "msg",
                "to": "payload.received",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "mac_counter",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "new_device",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "options",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "addr",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2790,
        "y": 340,
        "wires": [
            [
                "cb1d57a6956bf9d5"
            ]
        ]
    },
    {
        "id": "22e1d48c9d31e211",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getRPM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col32",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 900,
        "wires": [
            [
                "26b4fc05865922dd"
            ]
        ]
    },
    {
        "id": "26b4fc05865922dd",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "0118f7252fb24937"
        ],
        "x": 3035,
        "y": 900,
        "wires": []
    },
    {
        "id": "1a58b07348549329",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getTYPE",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col8",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 860,
        "wires": [
            [
                "a9d622a6c42ef80a"
            ]
        ]
    },
    {
        "id": "a9d622a6c42ef80a",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "0fb457a2a3f0c955"
        ],
        "x": 3035,
        "y": 860,
        "wires": []
    },
    {
        "id": "520965335993794e",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getRSSI",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 820,
        "wires": [
            [
                "33431c4097ac272a"
            ]
        ]
    },
    {
        "id": "33431c4097ac272a",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "6e9426aa42863fcd"
        ],
        "x": 3035,
        "y": 820,
        "wires": []
    },
    {
        "id": "3ee7be6cba98112e",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getFW",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col6",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2890,
        "y": 780,
        "wires": [
            [
                "8320c380dd9804d0"
            ]
        ]
    },
    {
        "id": "8320c380dd9804d0",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "ac0d3e8a624161e5"
        ],
        "x": 3035,
        "y": 780,
        "wires": []
    },
    {
        "id": "bfa1413b790ba737",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getMODE",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col7",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 740,
        "wires": [
            [
                "3cf38206548a9938"
            ]
        ]
    },
    {
        "id": "3cf38206548a9938",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 36",
        "mode": "link",
        "links": [
            "8a24745d274dca8b"
        ],
        "x": 3035,
        "y": 740,
        "wires": []
    },
    {
        "id": "b30913fcb777b369",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getCOUNT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col2",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 700,
        "wires": [
            [
                "1b46a0ab341a9aef"
            ]
        ]
    },
    {
        "id": "1b46a0ab341a9aef",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 37",
        "mode": "link",
        "links": [
            "b54a9e20f8d9a5ae"
        ],
        "x": 3035,
        "y": 700,
        "wires": []
    },
    {
        "id": "153918c18472b572",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "filter-processed",
        "property": "payload.sensor_data.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 700,
        "y": 340,
        "wires": [
            [
                "a595391117fc41d3"
            ],
            [
                "a595391117fc41d3"
            ],
            [
                "a595391117fc41d3"
            ]
        ]
    },
    {
        "id": "da4ab9390b172b35",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "name": "link in 8",
        "links": [
            "44357fe2b0578d36",
            "46ba59c51f1d3afe",
            "94ebd5ae11609e4f"
        ],
        "x": 2485,
        "y": 240,
        "wires": [
            [
                "fce5ab988eb080c3"
            ]
        ]
    },
    {
        "id": "dc34c08095c85bfa",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "group": "63c8e31dd0194b68",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Selected",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 1490,
        "y": 840,
        "wires": []
    },
    {
        "id": "c90a63c48f750238",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 41",
        "mode": "link",
        "links": [
            "bf12f03f7168b2be"
        ],
        "x": 1685,
        "y": 760,
        "wires": []
    },
    {
        "id": "3bb18c2073c5cf65",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 42",
        "mode": "link",
        "links": [
            "9eb3395d3a8c2347"
        ],
        "x": 2405,
        "y": 760,
        "wires": []
    },
    {
        "id": "b66f017a24d49bf7",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getLastHeard",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$moment(payload.col57).format(\"yyyy-MM-dd HH:mm:ss\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 460,
        "wires": [
            [
                "97a68286ef75b23c"
            ]
        ]
    },
    {
        "id": "97a68286ef75b23c",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 43",
        "mode": "link",
        "links": [
            "e9a6e04941f9686d"
        ],
        "x": 3035,
        "y": 440,
        "wires": []
    },
    {
        "id": "ee0ebbda7a2848c3",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "probe-validator",
        "func": "if(!msg.fromLive){\n    let type = flow.get(\"type_114\");\n    if(type == 110 || type == 114){\n        msg = {};\n        msg.ui_update = { \n            \"label\": \"\"\n        }\n        msg.enabled = false;\n        return msg;\n    } else if(type == 111){\n        // let probe = flow.get(\"probe\");\n        msg = {};\n        msg.ui_update = { \n            \"label\": \"probe 1\"\n        }\n        msg.enabled = true;\n        msg.payload = false;\n        return msg;\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 760,
        "wires": [
            [
                "3bb18c2073c5cf65"
            ]
        ]
    },
    {
        "id": "8113151a2da45a13",
        "type": "ui-template",
        "z": "74f0f072aba2913a",
        "g": "108b08b06e2d677a",
        "group": "",
        "page": "3c148a5ec9b4b2b7",
        "ui": "",
        "name": "style_114",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": ".v-main {\n    --v-layout-top: 0px !important;\n    --v-layout-left: 181px !important;\n    background-color: #2d2d2d !important;\n}\n.bg-group-background{\n    border-width: 0.5px !important;\n    border-radius:  15px !important;\n    background-color: #484848ae !important;\n    border-color: #fd8f00b1 !important;\n}\n.v-toolbar{\n    left: 12px !important;\n    top: 13px !important;\n    width: 50px !important;\n    height: 85px !important;\n    border-radius: 15px 0px 0px 15px;\n    background-color: #fd8f00b1 !important;\n    border-color: #fd8e00  !important;\n}\n.v-toolbar .v-btn{\n    top: 10px;\n}\n.v-navigation-drawer--left{\n    top: 115px !important;\n    height: 345px !important;\n    width: 180px !important;\n    background-color: #fd8f00b1 !important;\n    border-color: #fd8e00  !important;\n    border-radius: 0px 15px 15px 0px !important;\n}\n.gen4GroupSelectMac {\n    top: 740px !important;\n    width: 165px !important;\n    left: 13px !important;\n    position: absolute !important;\n}\n.gen4GroupSelectMac .v-card{\n    height:210px !important;\n}\n.gen4DatePicker{\n    color: white;\n    left: -11px;\n    width: 153px;\n    position: relative;\n}\n.gen4GrupoDownload{\n    height: 100px !important;\n    top: 475px;\n    position: absolute;\n    left: 13px;\n    width: 165px !important;\n}\n.gen4GrupoDownload .v-card{\n    height: 255px !important;\n}\n.vibrationPlusGroupTempBatt .v-card{\n    height: 246px !important;\n}\n.switch_114{\n    color: white;\n}\n.infoGroup {\n        width: 165px !important;\n}\n.infoGroup .v-card{\n    height: 256px !important;\n}\n.gen4gauge{\n    color: white;\n}\n.nrdb-ui-gauge-size-xs .nrdb-ui-gauge-value span {\n    font-size: 30px !important;\n}\n.gen4Dropdown{\n    color: white;\n}\n\ndiv.v-snackbar--variant-elevated {\n    width: 80vw;\n    max-width: 600px;\n    min-width: 400px;\n}\n.v-snackbar__content {\n    width: 100%;\n    color: white;\n}\n.v-snackbar--vertical .v-snackbar__wrapper {\n    background-color: #484848f7;\n    border-radius: 15px;\n    border: 10px;\n}\ndiv.v-snackbar--variant-elevated>.v-snackbar__actions button {\n    color: white;\n    background-color: #fd8f00b1 !important;\n    margin: 10px;\n}\ndiv.v-snackbar--variant-elevated table {\n    width: 100%;\n    border-collapse: collapse;\n}\ndiv.v-snackbar--variant-elevated th {\n    padding: 5px;\n    border-bottom: 4px solid var(--red-ui-form-input-border-color, #7b7b7b) !important;\n    text-align: left;\n}\ndiv.v-snackbar--variant-elevated td {\n    border-bottom: 1px solid var(--red-ui-form-input-border-color, #747474) !important;\n    padding: 1px;\n    text-align: left;\n}\n.diag_wrapper{\n    color: white;\n}\n.gen4DatePickerChart{\n    color: white;\n}\n.switch_live_114{\n    color: white;\n}",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 4540,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c034f6e31e838a34",
        "type": "ui-template",
        "z": "74f0f072aba2913a",
        "g": "108b08b06e2d677a",
        "group": "",
        "page": "3c148a5ec9b4b2b7",
        "ui": "",
        "name": "logo_114",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <a href=\"https://ncd.io/\" target=\"_blank\">\n        <div class=\"ncd-logo\">\n            <v-chip label size=\"x-large\" :width=\"150\" color=\"white\" text=\"ncd.io\"></v-chip>\n        </div>\n    </a>\n</template>\n<style>\n    .ncd-logo {\n        transform: rotate(0deg);\n        width: 140px;\n        position: absolute;\n        top: 13px;\n        left: 70px;\n    }\n    .v-chip.v-chip--size-x-large {\n        --v-chip-height: 85px;\n        font-size: 1.65rem;\n        font-family: system-ui;\n        font-weight: bold;\n    }\n    .v-chip--variant-tonal .v-chip__underlay {\n        border-radius: 0px 15px 15px 0px !important;\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "widget:page",
        "className": "",
        "x": 3960,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e4f53f54fcfc2273",
        "type": "ui-template",
        "z": "74f0f072aba2913a",
        "g": "108b08b06e2d677a",
        "group": "",
        "page": "3c148a5ec9b4b2b7",
        "ui": "",
        "name": "product_Info_114",
        "order": 0,
        "width": "",
        "height": "",
        "head": "",
        "format": "<template>\n    <a href=\"https://store.ncd.io/product/industrial-iot-wireless-smart-vibration-sensor-gen4/\" target=\"_blank\">\n        <v-btn class=\"vpInfoButton\" color=\"#fd8f00b1\" density=\"default\" append-icon=\"mdi-open-in-new\"> Product info </v-btn>\n    </a>\n</template>\n<style>\n.vpInfoButton{\n    height: 10px !important;\n    position: absolute;\n    top: 1020px;\n    left: 27px;\n    width: 142px;\n}\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "widget:page",
        "className": "",
        "x": 3450,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "90e6192d9b4e41a2",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 88",
        "links": [
            "9df5f842d86ebdc3",
            "bf4b9d24d246aee3"
        ],
        "x": 4055,
        "y": 920,
        "wires": [
            [
                "1a7030fb1bfa64cf"
            ]
        ]
    },
    {
        "id": "5c1edfa7f95b7f70",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 89",
        "links": [
            "6debd157575965a5"
        ],
        "x": 4335,
        "y": 1040,
        "wires": [
            [
                "1f26ae6dbb1cd08a"
            ]
        ]
    },
    {
        "id": "1a7030fb1bfa64cf",
        "type": "ui-gauge",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "vpTempGauge",
        "group": "ad7531e06b2c6dc8",
        "order": 2,
        "value": "payload",
        "valueType": "msg",
        "width": "1",
        "height": "4",
        "gtype": "gauge-34",
        "gstyle": "needle",
        "title": "",
        "alwaysShowTitle": false,
        "units": "",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c",
                "text": "",
                "textType": "label"
            },
            {
                "from": "40",
                "color": "#ffc800",
                "text": "",
                "textType": "label"
            },
            {
                "from": "70",
                "color": "#ea5353",
                "text": "",
                "textType": "label"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": "0",
        "sizeGap": "0",
        "sizeKeyThickness": "12",
        "styleRounded": true,
        "styleGlow": false,
        "className": "gen4gauge",
        "x": 4200,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "7bf4dc27d4be6b51",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "1d5cbe707db86244",
        "name": "vpBatteryChart",
        "label": "BATTERY PERCENTAGE [%]",
        "order": 1,
        "chartType": "line",
        "category": "Battery",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "battery_percent",
        "yAxisPropertyType": "property",
        "ymin": "70",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#ffffff",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "2",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4540,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "bcab298ef595f49d",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 90",
        "links": [
            "b4423746c771e773",
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037"
        ],
        "x": 3575,
        "y": 1000,
        "wires": [
            [
                "154ecbdb23ddf01a"
            ]
        ]
    },
    {
        "id": "1e85fceff218d73d",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 93",
        "links": [
            "24f40aac9b4f830e"
        ],
        "x": 4335,
        "y": 920,
        "wires": [
            [
                "2a19adcc03faaefd"
            ]
        ]
    },
    {
        "id": "2a19adcc03faaefd",
        "type": "change",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4385,
        "y": 920,
        "wires": [
            [
                "c76fe27ccb6fd037",
                "7bf4dc27d4be6b51"
            ]
        ],
        "l": false
    },
    {
        "id": "30bcc6f673b5632f",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 94",
        "links": [
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 4335,
        "y": 960,
        "wires": [
            [
                "7bf4dc27d4be6b51"
            ]
        ]
    },
    {
        "id": "18c23c601fa34721",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 99",
        "links": [
            "bf4b9d24d246aee3"
        ],
        "x": 4335,
        "y": 1000,
        "wires": [
            [
                "7bf4dc27d4be6b51",
                "1f26ae6dbb1cd08a"
            ]
        ]
    },
    {
        "id": "27177f696970ba49",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "ad7531e06b2c6dc8",
        "name": "vpTempChart",
        "label": "TEMPERATURE [°C]",
        "order": 1,
        "chartType": "line",
        "category": "Temperature",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "temperature",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#ffffff",
            "#f8f125",
            "#ff0f0f",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "2",
        "height": "4",
        "className": "",
        "interpolation": "bezier",
        "x": 4190,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "154ecbdb23ddf01a",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "6b4cfee43f267b82",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "ODR:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": "16",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 3670,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7c0dea051c06e1fe",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "871f947c6bf37ced",
        "name": "RMS (G)",
        "label": "RMS Acceleration [G]",
        "order": 1,
        "chartType": "line",
        "category": "[\"x_rms_ACC_G\",\"y_rms_ACC_G\",\"z_rms_ACC_G\"]",
        "categoryType": "json",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "data",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": true,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#2095f2",
            "#ffffff",
            "#000000",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 3500,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "94b41b0dca8033f6",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "ee40546169cc4f6e",
        "name": "X - Velocity (mm/sec) ",
        "label": "X - Velocity [mm/sec]",
        "order": 1,
        "chartType": "line",
        "category": "x_velocity_mm_sec",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "x_velocity_mm_sec",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#2ca02c",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4020,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "d9e3767bd5e11937",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "e080ce6faa9dafc1",
        "name": "X - Displacement (mm)",
        "label": "X - Displacement [mm]",
        "order": 1,
        "chartType": "line",
        "category": "x_displacement_mm",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "x_displacement_mm",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#ff9694",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4520,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "9c775ed0af28f438",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "2e65c7c2db11a067",
        "name": "MAX (G)",
        "label": "MAX Acceleration [G]",
        "order": 1,
        "chartType": "line",
        "category": "[\"x_max_ACC_G\",\"y_max_ACC_G\",\"z_max_ACC_G\"]",
        "categoryType": "json",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "data",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": true,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#2095f2",
            "#ffffff",
            "#000000",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "bezier",
        "x": 3500,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "44d86bcf31af0079",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "ac28f055e2a68798",
        "name": "Y - Velocity (mm/sec)",
        "label": "Y - Velocity [mm/sec]",
        "order": 1,
        "chartType": "line",
        "category": "y_velocity_mm_sec",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "y_velocity_mm_sec",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#98df8a",
            "#98df8a",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4020,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "9d11ebbafbebf815",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "7799c09456a3cd22",
        "name": "Y - Displacement (mm)",
        "label": "Y - Displacement [mm]",
        "order": 1,
        "chartType": "line",
        "category": "y_displacement_mm",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "y_displacement_mm",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#9467bd",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4520,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "d44b8133d0032393",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "b41a37f94361e78b",
        "name": "PEAK (Hz)",
        "label": "Amplitude Peak [Hz]",
        "order": 1,
        "chartType": "line",
        "category": "[\"x_peak_one_Hz\",\"y_peak_one_Hz\",\"z_peak_one_Hz\",\"x_peak_two_Hz\",\"y_peak_two_Hz\",\"z_peak_two_Hz\",\"x_peak_three_Hz\",\"y_peak_three_Hz\",\"z_peak_three_Hz\"]",
        "categoryType": "json",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "data",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": true,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#2095f2",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 3490,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "5b34e3823452064a",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "bd2d49356e4ffaa7",
        "name": "Z - Velocity (mm/sec)",
        "label": "Z - Velocity [mm/sec]",
        "order": 1,
        "chartType": "line",
        "category": "z_velocity_mm_sec",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "z_velocity_mm_sec",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#d62728",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4020,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "96d321ba41dd19f3",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "9351763853fe951d",
        "name": "Z - Displacement (mm)",
        "label": "Z - Displacement [mm]",
        "order": 1,
        "chartType": "line",
        "category": "z_displacement_mm",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "z_displacement_mm",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#c5b0d5",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4520,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "672d1596b929fe61",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 113",
        "links": [
            "c76fe27ccb6fd037",
            "bf4b9d24d246aee3",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 4055,
        "y": 960,
        "wires": [
            [
                "27177f696970ba49"
            ]
        ]
    },
    {
        "id": "29db896bdbe704e9",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 114",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 3375,
        "y": 1120,
        "wires": [
            [
                "7c0dea051c06e1fe"
            ]
        ]
    },
    {
        "id": "f08296d37c8f3aba",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 115",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 3375,
        "y": 1180,
        "wires": [
            [
                "9c775ed0af28f438"
            ]
        ]
    },
    {
        "id": "f8b55adc9cd5d2b6",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 116",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 3375,
        "y": 1240,
        "wires": [
            [
                "d44b8133d0032393"
            ]
        ]
    },
    {
        "id": "21ab969fdb30288f",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 117",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 3885,
        "y": 1120,
        "wires": [
            [
                "94b41b0dca8033f6"
            ]
        ]
    },
    {
        "id": "6c72da5b2f90c170",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 118",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 3885,
        "y": 1180,
        "wires": [
            [
                "44d86bcf31af0079"
            ]
        ]
    },
    {
        "id": "71fe5998a0986d47",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 119",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 3885,
        "y": 1240,
        "wires": [
            [
                "5b34e3823452064a"
            ]
        ]
    },
    {
        "id": "999d7d7460edd890",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 120",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 4385,
        "y": 1120,
        "wires": [
            [
                "d9e3767bd5e11937"
            ]
        ]
    },
    {
        "id": "ba5f531a90b5c137",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 121",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 4385,
        "y": 1180,
        "wires": [
            [
                "9d11ebbafbebf815"
            ]
        ]
    },
    {
        "id": "3b39bce2d676b838",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 122",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 4385,
        "y": 1240,
        "wires": [
            [
                "96d321ba41dd19f3"
            ]
        ]
    },
    {
        "id": "c76fe27ccb6fd037",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link out 95",
        "mode": "link",
        "links": [
            "29db896bdbe704e9",
            "f08296d37c8f3aba",
            "f8b55adc9cd5d2b6",
            "21ab969fdb30288f",
            "6c72da5b2f90c170",
            "71fe5998a0986d47",
            "999d7d7460edd890",
            "ba5f531a90b5c137",
            "3b39bce2d676b838",
            "0fb457a2a3f0c955",
            "bcab298ef595f49d",
            "672d1596b929fe61",
            "ac0d3e8a624161e5",
            "6e9426aa42863fcd",
            "c50c02e0cb9fc2a9",
            "8a24745d274dca8b",
            "b54a9e20f8d9a5ae",
            "0118f7252fb24937",
            "e9a6e04941f9686d",
            "eeebbeb85197ecc8",
            "cb20dd623969d883",
            "6b99dd54170d69f3",
            "24dee64eb560f0ae",
            "081d75fa1257ebbd",
            "f0fd5394412abb54",
            "17ea968836d683fe",
            "3982b468e4d0f98f",
            "8d55b9846ba3b062",
            "2b5829f954a1ee45",
            "5d740b4a5ad85dc8",
            "62fd3fc728da800a",
            "9a29db5ac04a0b6a"
        ],
        "x": 4455,
        "y": 920,
        "wires": []
    },
    {
        "id": "1f26ae6dbb1cd08a",
        "type": "ui-gauge",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "",
        "group": "1d5cbe707db86244",
        "order": 2,
        "value": "payload",
        "valueType": "msg",
        "width": "1",
        "height": "3",
        "gtype": "gauge-battery",
        "gstyle": "needle",
        "title": "",
        "units": "units",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ffffff"
            },
            {
                "from": "100",
                "color": "#ffffff"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 4540,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "0118f7252fb24937",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 1",
        "links": [
            "26b4fc05865922dd",
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037"
        ],
        "x": 3795,
        "y": 920,
        "wires": [
            [
                "85ce39db1d0d2ad8"
            ]
        ]
    },
    {
        "id": "85ce39db1d0d2ad8",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "ca515ecadb7b11f6",
        "order": 2,
        "width": "1",
        "height": "4",
        "name": "",
        "label": "RPM",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": "35",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 3890,
        "y": 920,
        "wires": []
    },
    {
        "id": "0fb457a2a3f0c955",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 3",
        "links": [
            "a9d622a6c42ef80a",
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037"
        ],
        "x": 3575,
        "y": 960,
        "wires": [
            [
                "c2a1fe17f87ea34f"
            ]
        ]
    },
    {
        "id": "c2a1fe17f87ea34f",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "6b4cfee43f267b82",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Msg Type: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": "15",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 3690,
        "y": 960,
        "wires": []
    },
    {
        "id": "ac0d3e8a624161e5",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 2",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "8320c380dd9804d0"
        ],
        "x": 3375,
        "y": 920,
        "wires": [
            [
                "f4275b44c9050887"
            ]
        ]
    },
    {
        "id": "f4275b44c9050887",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "9304e6a84ec00cee",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Firmware:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 3480,
        "y": 920,
        "wires": []
    },
    {
        "id": "6e9426aa42863fcd",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 4",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "33431c4097ac272a"
        ],
        "x": 3375,
        "y": 960,
        "wires": [
            [
                "9af1b0a546ae1ee5"
            ]
        ]
    },
    {
        "id": "9af1b0a546ae1ee5",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "9304e6a84ec00cee",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "RSSI:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 3470,
        "y": 960,
        "wires": []
    },
    {
        "id": "c50c02e0cb9fc2a9",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 5",
        "links": [
            "c76fe27ccb6fd037",
            "bf4b9d24d246aee3",
            "3633e7dbbd2ffc75",
            "bad92bec208da393"
        ],
        "x": 3795,
        "y": 960,
        "wires": [
            [
                "83ba578c0b46bca8"
            ]
        ]
    },
    {
        "id": "83ba578c0b46bca8",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "ca515ecadb7b11f6",
        "name": "vpRPMChart",
        "label": "RPM",
        "order": 1,
        "chartType": "line",
        "category": "RPM",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "rpm",
        "yAxisPropertyType": "property",
        "ymin": "0",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#ffffff",
            "#f8f125",
            "#ff0f0f",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "2",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 3910,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "8a24745d274dca8b",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 6",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "3cf38206548a9938"
        ],
        "x": 3375,
        "y": 1000,
        "wires": [
            [
                "98da5c62d58d9751"
            ]
        ]
    },
    {
        "id": "98da5c62d58d9751",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "9304e6a84ec00cee",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Mode:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 3470,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b54a9e20f8d9a5ae",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 7",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "1b46a0ab341a9aef"
        ],
        "x": 3375,
        "y": 1040,
        "wires": [
            [
                "7b7fc642ea8c0de8"
            ]
        ]
    },
    {
        "id": "7b7fc642ea8c0de8",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "9304e6a84ec00cee",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Counter:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 3480,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e9a6e04941f9686d",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 9",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "97a68286ef75b23c"
        ],
        "x": 3575,
        "y": 920,
        "wires": [
            [
                "a36220971adc5841"
            ]
        ]
    },
    {
        "id": "a36220971adc5841",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "6b4cfee43f267b82",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Last Heard",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "wrapText": true,
        "className": "",
        "x": 3690,
        "y": 920,
        "wires": []
    },
    {
        "id": "ac19857639bd2943",
        "type": "ui-switch",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "probe",
        "label": "P 1",
        "group": "4a3301f714eebc10",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "switch_114",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "Probe 2",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Probe 1",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "x": 4210,
        "y": 220,
        "wires": [
            [
                "90bd54a3e02f434d"
            ]
        ]
    },
    {
        "id": "90bd54a3e02f434d",
        "type": "function",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "function 1",
        "func": "let msg1 = {};\nlet label = msg.payload;\n// flow.set('probe', label);\nmsg.ui_update = {\n    'label': label\n}\nif(label == \"Probe 1\"){\n    let unit = \n    {\n        groups: \n        { \n            show:\n            [\n                \"gen4Vibration:gen4Firmware\",\n                \"gen4Vibration:gen4MsgType\",\n                \"gen4Vibration:gen4Download\",\n                \"gen4Vibration:gen4Temperature\",\n                \"gen4Vibration:gen4RPM\",\n                \"gen4Vibration:gen4Battery\",\n                \"gen4Vibration:gen4ACCGroup_x\",\n                \"gen4Vibration:gen4VelDisplGroup_x\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_x\",\n                \"gen4Vibration:gen4ACCGroup_y\",\n                \"gen4Vibration:gen4VelDisplGroup_y\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_y\",\n                \"gen4Vibration:gen4ACCGroup_z\",\n                \"gen4Vibration:gen4VelDisplGroup_z\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_z\"\n            ],\n            hide:\n            [\n                \"gen4Vibration:gen4Temperature2\",\n                \"gen4Vibration:gen4RPM2\",\n                \"gen4Vibration:gen4ACCGroup_x2\",\n                \"gen4Vibration:gen4ACCGroup_y2\",\n                \"gen4Vibration:gen4VelDisplGroup_x2\",\n                \"gen4Vibration:gen4ACCGroup_z2\",\n                \"gen4Vibration:gen4VelDisplGroup_y2\",\n                \"gen4Vibration:gen4VelDisplGroup_z2\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_x2\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_y2\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_z2\"\n            ],\n            enable:\n            [\n                \"gen4Vibration:gen4SelectMac\",\n                \"gen4Vibration:gen4Download\"\n            ]\n        }\n    }\n    msg1.payload = unit;\n    return [msg, msg1];\n} else if(label == \"Probe 2\"){\n        let unit = \n    {\n        groups: \n        { \n            show:\n            [\n                \"gen4Vibration:gen4Firmware\",\n                \"gen4Vibration:gen4MsgType\",\n                \"gen4Vibration:gen4Download\",\n                \"gen4Vibration:gen4Temperature2\",\n                \"gen4Vibration:gen4RPM2\",\n                \"gen4Vibration:gen4Battery\",\n                \"gen4Vibration:gen4ACCGroup_x2\",\n                \"gen4Vibration:gen4VelDisplGroup_x2\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_x2\",\n                \"gen4Vibration:gen4ACCGroup_y2\",\n                \"gen4Vibration:gen4VelDisplGroup_y2\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_y2\",\n                \"gen4Vibration:gen4ACCGroup_z2\",\n                \"gen4Vibration:gen4VelDisplGroup_z2\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_z2\"\n            ],\n            hide:\n            [\n                \"gen4Vibration:gen4Temperature\",\n                \"gen4Vibration:gen4RPM\",\n                \"gen4Vibration:gen4ACCGroup_x\",\n                \"gen4Vibration:gen4ACCGroup_y\",\n                \"gen4Vibration:gen4VelDisplGroup_x\",\n                \"gen4Vibration:gen4ACCGroup_z\",\n                \"gen4Vibration:gen4VelDisplGroup_y\",\n                \"gen4Vibration:gen4VelDisplGroup_z\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_x\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_y\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_z\"\n            ],\n            enable:\n            [\n                \"gen4Vibration:gen4SelectMac\",\n                \"gen4Vibration:gen4Download\"\n            ]\n        }\n    }\n    msg1.payload = unit;\n    return [msg, msg1];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4340,
        "y": 220,
        "wires": [
            [
                "ac19857639bd2943"
            ],
            [
                "91131f71bf01b698"
            ]
        ]
    },
    {
        "id": "9eb3395d3a8c2347",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "link in 11",
        "links": [
            "3bb18c2073c5cf65",
            "a868714bee51b4aa"
        ],
        "x": 4105,
        "y": 220,
        "wires": [
            [
                "ac19857639bd2943"
            ]
        ]
    },
    {
        "id": "2d32333322148b58",
        "type": "function",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "Set base path",
        "func": "var basePath = msg.path;\nvar device = msg.device;\nvar filename = msg.date;\nlet type = flow.get(\"type_114\");\nmsg.filename = basePath + type + '/' + device + '/' + filename + \".csv\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4160,
        "y": 460,
        "wires": [
            [
                "9d86cbc7387eb9d5"
            ]
        ]
    },
    {
        "id": "d6ca7f65c0cdd05c",
        "type": "http response",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 4510,
        "y": 460,
        "wires": []
    },
    {
        "id": "9d86cbc7387eb9d5",
        "type": "file in",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4340,
        "y": 460,
        "wires": [
            [
                "d6ca7f65c0cdd05c"
            ]
        ]
    },
    {
        "id": "223905a2cf1dc2cd",
        "type": "catch",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "",
        "scope": [
            "9d86cbc7387eb9d5"
        ],
        "uncaught": false,
        "x": 4210,
        "y": 500,
        "wires": [
            [
                "69f176502ddb6172",
                "96e454e2da052933"
            ]
        ]
    },
    {
        "id": "3e261f52d0ae4c0d",
        "type": "http in",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "",
        "url": "/log/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 3790,
        "y": 460,
        "wires": [
            [
                "dcd1ab83177a78ba"
            ]
        ]
    },
    {
        "id": "dcd1ab83177a78ba",
        "type": "change",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "path",
                "pt": "msg",
                "to": "base_path_114",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "device",
                "pt": "msg",
                "to": "mac_selection_114",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "date",
                "pt": "msg",
                "to": "date_download_114",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3980,
        "y": 460,
        "wires": [
            [
                "2d32333322148b58"
            ]
        ]
    },
    {
        "id": "69f176502ddb6172",
        "type": "function",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "error message",
        "func": "var error = \"Error: no such file or directory\";\nmsg = {};\nmsg.payload = error;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 500,
        "wires": [
            [
                "091a1bbe50d09d5a"
            ]
        ]
    },
    {
        "id": "091a1bbe50d09d5a",
        "type": "trigger",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 4495,
        "y": 500,
        "wires": [
            [
                "44357fe2b0578d36"
            ]
        ],
        "l": false
    },
    {
        "id": "96e454e2da052933",
        "type": "http response",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "Redirecting",
        "statusCode": "302",
        "headers": {
            "location": "/dashboard/gen4Vibration"
        },
        "x": 4370,
        "y": 540,
        "wires": []
    },
    {
        "id": "9bb28a4c8e1246ce",
        "type": "ui-template",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "group": "",
        "page": "3c148a5ec9b4b2b7",
        "ui": "",
        "name": "FLY-configuration_114",
        "order": 0,
        "width": "2",
        "height": "1",
        "head": "",
        "format": "<template>\n    <v-btn class=\"configuration_button_114\" @click=\"send({payload:true})\" color=\"#fd8f00b1\" append-icon=\"mdi mdi-cog\"> Configuration </v-btn>\n</template>\n\n<style>\n.configuration_button_114{\n    height: 10px !important;\n    top: -125px !important;\n    left: -155px !important;\n    width: 142px !important;\n}\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "widget:page",
        "className": "",
        "x": 3460,
        "y": 740,
        "wires": [
            [
                "6d701b75724b2c82"
            ]
        ]
    },
    {
        "id": "91131f71bf01b698",
        "type": "ui-control",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "",
        "ui": "ec459411017ddf37",
        "events": "change",
        "x": 4520,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f04c27227bd29867",
        "type": "function",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "init_show_114",
        "func": "let unit = {\n    groups:\n    {\n        show:\n            [\n                \"gen4Vibration:gen4Firmware\",\n                \"gen4Vibration:gen4MsgType\",\n                \"gen4Vibration:gen4Download\",\n                \"gen4Vibration:gen4Temperature\",\n                \"gen4Vibration:gen4RPM\",\n                \"gen4Vibration:gen4Battery\",\n                \"gen4Vibration:gen4ACCGroup_x\",\n                \"gen4Vibration:gen4VelDisplGroup_x\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_x\",\n                \"gen4Vibration:gen4ACCGroup_y\",\n                \"gen4Vibration:gen4VelDisplGroup_y\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_y\",\n                \"gen4Vibration:gen4ACCGroup_z\",\n                \"gen4Vibration:gen4VelDisplGroup_z\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_z\"\n            ],\n        hide:\n            [\n                \"gen4Vibration:gen4Temperature2\",\n                \"gen4Vibration:gen4RPM2\",\n                \"gen4Vibration:gen4ACCGroup_x2\",\n                \"gen4Vibration:gen4ACCGroup_y2\",\n                \"gen4Vibration:gen4VelDisplGroup_x2\",\n                \"gen4Vibration:gen4ACCGroup_z2\",\n                \"gen4Vibration:gen4VelDisplGroup_y2\",\n                \"gen4Vibration:gen4VelDisplGroup_z2\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_x2\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_y2\",\n                \"gen4Vibration:gen4OneTwoThreeGroup_z2\"\n            ],\n        enable:\n            [\n                \"gen4Vibration:gen4SelectMac\",\n                \"gen4Vibration:gen4Download\"\n            ]\n    }\n}\nmsg.payload = unit;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4320,
        "y": 280,
        "wires": [
            [
                "91131f71bf01b698"
            ]
        ]
    },
    {
        "id": "a46498e6245cd887",
        "type": "change",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "delete_114",
        "rules": [
            {
                "t": "delete",
                "p": "mac_addresses_114",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "mac_count_114",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "mac_selection_114",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "date_download_114",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "inspect_114",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "last_mac_114",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "type_114",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "fly_114",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "lastlive",
                "pt": "flow"
            },
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[\"\"]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3950,
        "y": 280,
        "wires": [
            [
                "f04c27227bd29867",
                "bf4b9d24d246aee3",
                "2664ccde11b46bee"
            ]
        ],
        "icon": "font-awesome/fa-remove"
    },
    {
        "id": "bf4b9d24d246aee3",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "link out 92",
        "mode": "link",
        "links": [
            "4587f3887649f640",
            "18c23c601fa34721",
            "29db896bdbe704e9",
            "f08296d37c8f3aba",
            "f8b55adc9cd5d2b6",
            "21ab969fdb30288f",
            "6c72da5b2f90c170",
            "71fe5998a0986d47",
            "999d7d7460edd890",
            "ba5f531a90b5c137",
            "3b39bce2d676b838",
            "0fb457a2a3f0c955",
            "bcab298ef595f49d",
            "0118f7252fb24937",
            "672d1596b929fe61",
            "ac0d3e8a624161e5",
            "6e9426aa42863fcd",
            "c50c02e0cb9fc2a9",
            "8a24745d274dca8b",
            "b54a9e20f8d9a5ae",
            "90e6192d9b4e41a2",
            "e9a6e04941f9686d",
            "735d961aff7aae3d",
            "61399dcd2df1e6f6",
            "eeebbeb85197ecc8",
            "cb20dd623969d883",
            "6b99dd54170d69f3",
            "24dee64eb560f0ae",
            "081d75fa1257ebbd",
            "f0fd5394412abb54",
            "17ea968836d683fe",
            "3982b468e4d0f98f",
            "8d55b9846ba3b062",
            "2b5829f954a1ee45",
            "5d740b4a5ad85dc8",
            "62fd3fc728da800a",
            "9a29db5ac04a0b6a"
        ],
        "x": 4055,
        "y": 240,
        "wires": []
    },
    {
        "id": "2664ccde11b46bee",
        "type": "ui-text-input",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "group": "967e40c59097eef1",
        "name": "date_picker_114",
        "label": "Date:",
        "order": 1,
        "width": "0",
        "height": "0",
        "topic": "topic",
        "topicType": "msg",
        "mode": "date",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": true,
        "sendOnBlur": false,
        "sendOnEnter": false,
        "className": "gen4DatePicker",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "right",
        "iconInnerPosition": "inside",
        "x": 3760,
        "y": 420,
        "wires": [
            [
                "54434242db8b9ea2"
            ]
        ]
    },
    {
        "id": "b1fb7ec76b9f0a5e",
        "type": "ui-template",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "group": "967e40c59097eef1",
        "page": "",
        "ui": "",
        "name": "gen4Download",
        "order": 2,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<template>  \n    <a :href=\"`${msg.url}`\">\n        <v-btn class=\"gen4ButtonDownload\" color=\"#fd8f00b1\">Download CSV</v-btn>\n    </a>\n</template>\n<style>\n.gen4ButtonDownload {\n    height: 10px !important;\n    width: 127px !important;\n}\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 4540,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "0c105b2658c88750",
        "type": "change",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "set-date-download-var",
        "rules": [
            {
                "t": "set",
                "p": "date_download_114",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4080,
        "y": 420,
        "wires": [
            [
                "3f206d83e47be21f"
            ]
        ]
    },
    {
        "id": "6b527c46199b1720",
        "type": "ui-button",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "group": "967e40c59097eef1",
        "name": "",
        "label": "Delete Selected",
        "order": 3,
        "width": "5",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "#fd8f00b1",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 3440,
        "y": 560,
        "wires": [
            [
                "4c215ad93c6526b1"
            ]
        ]
    },
    {
        "id": "4c215ad93c6526b1",
        "type": "function",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "build cmd",
        "func": "let date = flow.get('date_download_114') || null;\nlet addr = flow.get('mac_selection_114') || null;\nlet path = flow.get('base_path_114') || null;\nlet type = flow.get(\"type_114\") || null;\nif(date != null && addr != null && path != null && type != null){\n    msg.command = 'rm -r ' + path + '/' + type + '/' + addr + '/' + date + '.csv';\n    msg.payload = 'Are you sure to delete local CSV selected file?';\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3600,
        "y": 560,
        "wires": [
            [
                "c4c4f6f6cea38f75"
            ]
        ]
    },
    {
        "id": "c4c4f6f6cea38f75",
        "type": "ui-notification",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "ui": "ec459411017ddf37",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": false,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Cancel",
        "allowConfirm": true,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "notif",
        "x": 3730,
        "y": 580,
        "wires": [
            [
                "b865175187c07217"
            ]
        ]
    },
    {
        "id": "3b414228615b85dc",
        "type": "exec",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "command": "",
        "addpay": "command",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 3955,
        "y": 580,
        "wires": [
            [
                "8ed365a13732506e"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "e52a2ca0e119cf8b",
        "type": "ui-button",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "group": "967e40c59097eef1",
        "name": "",
        "label": "Delete All",
        "order": 4,
        "width": "5",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "#fd8f00b1",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 3420,
        "y": 600,
        "wires": [
            [
                "834f220d4d8d8164"
            ]
        ]
    },
    {
        "id": "834f220d4d8d8164",
        "type": "function",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "build cmd",
        "func": "let date = flow.get('date_download_114') || null;\nlet addr = flow.get('mac_selection_114') || null;\nlet path = flow.get('base_path_114') || null;\nlet type = flow.get(\"type_114\") || null;\nif(date != null && addr != null && path != null && type != null){\n    msg.command = 'rm -r ' + path + '/' + type + '/' + addr;\n    msg.payload = 'Are you sure to delete all CSV from selected device?';\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3600,
        "y": 600,
        "wires": [
            [
                "c4c4f6f6cea38f75"
            ]
        ]
    },
    {
        "id": "b865175187c07217",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "confirm",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "confirm_clicked",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 3860,
        "y": 580,
        "wires": [
            [
                "3b414228615b85dc"
            ]
        ]
    },
    {
        "id": "3f206d83e47be21f",
        "type": "function",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "get-mac-selection",
        "func": "let mac = flow.get('mac_selection_114') || '';\nlet date = flow.get('date_download_114') || '';\nmsg = {};\nif(mac == '' || date == ''){\n    return [msg, null];\n}\nmsg.url = \"/log/\" + date + \"_\" + mac + \".csv\";\nreturn [null, msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4330,
        "y": 420,
        "wires": [
            [
                "b1fb7ec76b9f0a5e"
            ],
            [
                "b1fb7ec76b9f0a5e"
            ]
        ]
    },
    {
        "id": "44357fe2b0578d36",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "da4ab9390b172b35"
        ],
        "x": 4545,
        "y": 500,
        "wires": []
    },
    {
        "id": "8ed365a13732506e",
        "type": "function",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "error",
        "func": "if(msg.rc.code){\n    msg.payload = 'No such file or directory';\n    return msg;\n}else{\n    msg.payload = 'File deleted from local';\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4050,
        "y": 580,
        "wires": [
            [
                "46ba59c51f1d3afe"
            ]
        ]
    },
    {
        "id": "46ba59c51f1d3afe",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "link out 39",
        "mode": "link",
        "links": [
            "da4ab9390b172b35"
        ],
        "x": 4135,
        "y": 580,
        "wires": []
    },
    {
        "id": "c126ab54e05a6983",
        "type": "ui-button",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "group": "63c8e31dd0194b68",
        "name": "clear_sensors_114",
        "label": "Clear sensors",
        "order": 2,
        "width": "0",
        "height": "0",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "Are you sure to clear the sensor's list?",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "#fd8f00b1",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 3470,
        "y": 280,
        "wires": [
            [
                "c8eec6ee3265ce34"
            ]
        ]
    },
    {
        "id": "c8eec6ee3265ce34",
        "type": "ui-notification",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "ui": "ec459411017ddf37",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": false,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Cancel",
        "allowConfirm": true,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "notif_114",
        "x": 3640,
        "y": 280,
        "wires": [
            [
                "395e74579496fe30"
            ]
        ]
    },
    {
        "id": "395e74579496fe30",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "confirm_114",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "confirm_clicked",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 3790,
        "y": 280,
        "wires": [
            [
                "a46498e6245cd887"
            ]
        ]
    },
    {
        "id": "54434242db8b9ea2",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3910,
        "y": 420,
        "wires": [
            [
                "0c105b2658c88750"
            ]
        ]
    },
    {
        "id": "bf12f03f7168b2be",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "link in 10",
        "links": [
            "c90a63c48f750238"
        ],
        "x": 4175,
        "y": 360,
        "wires": [
            [
                "3f206d83e47be21f",
                "f04c27227bd29867"
            ]
        ]
    },
    {
        "id": "6acc3569ff55de06",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "set-path",
        "func": "let path = msg.path;\nflow.set(\"live\", true); // init live flag\n\nif(path == null || path == \"\"){\n    flow.set(\"base_path_114\", \"/home/ncdio/.node-red/ncd_dashboard/log/\");\n    return msg;\n}\nelse{ \n    flow.set(\"base_path_114\", path);\n    return msg;\n}",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 220,
        "wires": []
    },
    {
        "id": "a595391117fc41d3",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "rssi-validator",
        "func": "if(!msg.payload.hasOwnProperty(\"rssi\")){\n    msg.payload.rssi = '--';\n    return msg;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 340,
        "wires": [
            [
                "4f91024b6433be37"
            ]
        ]
    },
    {
        "id": "24f40aac9b4f830e",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 45",
        "mode": "link",
        "links": [
            "1e85fceff218d73d"
        ],
        "x": 1995,
        "y": 760,
        "wires": []
    },
    {
        "id": "72623cb33785f891",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "FLY",
        "property": "payload.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FLY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OTF",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 400,
        "wires": [
            [
                "e454d9aadc999567"
            ],
            [
                "e454d9aadc999567"
            ]
        ]
    },
    {
        "id": "e454d9aadc999567",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "valid-reported_config",
        "property": "payload.reported_config",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "firmware",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 400,
        "wires": [
            [
                "16de781b9a62fbb1"
            ]
        ]
    },
    {
        "id": "d48e3df243069a66",
        "type": "template",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "config_results-to-pop-up-window",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"diag_wrapper\">\n    <h3>Address: {{payload.addr}} | Last Heard: {{payload.lastHeard}}</h3>\n    <table>\n        <thead>\n            <tr>\n                <th>CONFIGURATION</th>\n                <th>VALUE</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>Firmware Version</td>\n                <td>{{payload.firmware}}</td>\n            </tr>\n            <tr>\n                <td>Destination Address</td>\n                <td>{{payload.destination_address}}</td>\n            </tr>\n            <tr>\n                <td>Operation Mode</td>\n                <td>{{payload.mode}}</td>\n            </tr>\n            <tr>\n                <td>Output Data Rate (ODR)</td>\n                <td>{{payload.odr}}</td>\n            </tr>\n            <tr>\n                <td>Sampling Duration</td>\n                <td>{{payload.sampling_duration}}</td>\n            </tr>\n            <tr>\n                <td>Filter Status</td>\n                <td>{{payload.filter_status}}</td>\n            </tr>\n            <tr>\n                <td>Low Pass Filter Coefficient</td>\n                <td>{{payload.lpf_coeff}}</td>\n            </tr>\n            <tr>\n                <td>Low Pass Filter Frequency</td>\n                <td>{{payload.lpf_freq}}</td>\n            </tr>\n              <tr>\n                <td>High Pass Filter Coefficient</td>\n                <td>{{payload.hpf_coeff}}</td>\n            </tr>\n            <tr>\n                <td>High Pass Filter Frequency</td>\n                <td>{{payload.hpf_freq}}</td>\n            </tr>\n            <tr>\n                <td>Sampling Interval</td>\n                <td>{{payload.sampling_interval}}</td>\n            </tr>\n             <tr>\n                <td>On Request Timeout</td>\n                <td>{{payload.on_request_timeout}}</td>\n            </tr>\n            <tr>\n                <td>DeadBand</td>\n                <td>{{payload.deadband}}</td>\n            </tr>\n              <tr>\n                <td>Payload Length</td>\n                <td>{{payload.payload_length}}</td>\n            </tr>\n            <tr>\n                <td>Full Scale Range (FSR)</td>\n                <td>{{payload.fsr}}</td>\n            </tr>\n            <tr>\n                <td>RPM Compute Status</td>\n                <td>{{payload.rpm_compute_status}}</td>\n            </tr>\n            <tr>\n                <td>Auto Raw Destination Address</td>\n                <td>{{payload.auto_raw_destination_address}}</td>\n            </tr>\n            <tr>\n                <td>Auto Raw Interval</td>\n                <td>{{payload.auto_raw_interval}}</td>\n            </tr>\n            <tr>\n                <td>Smart Mode - Skip Count</td>\n                <td>{{payload.smart_mode_skip_count}}</td>\n            </tr>\n            <tr>\n                <td>Smart Mode - Acceleration Threshold</td>\n                <td>{{payload.smart_mode_acc_threshold}}</td>\n            </tr>\n            <tr>\n                <td>Uptime Counter</td>\n                <td>{{payload.uptime_counter}}</td>\n            </tr>\n            <tr>\n                <td>Max Transmission Raw Samples</td>\n                <td>{{payload.max_tx_raw_samples}}</td>\n            </tr>\n            <tr>\n                <td>Motion to Sampling Delay</td>\n                <td>{{payload.motion_to_sampling_delay}}</td>\n            </tr>\n            <tr>\n                <td>Max Number of Motion Transmission Per Interval</td>\n                <td>{{payload.max_num_of_motion_tx_per_interval}}</td>\n            </tr>\n            <tr>\n                <td>Hardware ID</td>\n                <td>{{payload.hardware_id}}</td>\n            </tr>\n            <tr>\n                <td>Reserved</td>\n                <td>{{payload.reserved}}</td>\n            </tr>\n            <tr>\n                <td>Transmission Lifetime Counter</td>\n                <td>{{payload.tx_lifetime_counter}}</td>\n            </tr>\n            <tr>\n                <td>RSSI</td>\n                <td>{{payload.rssi}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>",
        "output": "str",
        "x": 4370,
        "y": 720,
        "wires": [
            [
                "94ebd5ae11609e4f"
            ]
        ]
    },
    {
        "id": "16de781b9a62fbb1",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.reported_config.lastHeard",
                "pt": "msg",
                "to": "$moment(payload.lastHeard).format(\"yyyy-MM-dddd HH:mm:ss\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.mac",
                "pt": "msg",
                "to": "$substring(payload.mac, 12)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.reported_config.addr",
                "pt": "msg",
                "to": "payload.mac",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.reported_config.rssi",
                "pt": "msg",
                "to": "payload.rssi",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 400,
        "wires": [
            [
                "6133fe9b9cdde58a"
            ]
        ]
    },
    {
        "id": "94ebd5ae11609e4f",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "link out 40",
        "mode": "link",
        "links": [
            "da4ab9390b172b35"
        ],
        "x": 4605,
        "y": 760,
        "wires": []
    },
    {
        "id": "3173eb792d02a28b",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "build-structure-to-get-data",
        "func": "let msg1 = {};\nmsg1.payload = [];\nnode.send([msg1, msg1]);\n// Check if the payload is valid and has data. If not, stop the flow.\n// This prevents errors if an empty message is received.\nif (!msg.payload || !Array.isArray(msg.payload) || msg.payload.length === 0) {\n    node.warn(\"Payload is empty or not an array.\");\n    return null; // Stop the message from continuing.\n}\n\nconst sensor_type = msg.payload[0].col5;\n\n// Use const for variables that do not get reassigned.\nconst keyMapping = {};\n\n// Select the correct mapping based on the sensor type.\nif (sensor_type == 110 || sensor_type == 114) {\n    Object.assign(keyMapping, {\n        col1: \"time\",\n        col2: \"counter\",\n        col3: \"battery_percent\",\n        col4: \"rssi\",\n        col5: \"sensor_type\",\n        col6: \"firmware\",\n        col7: \"mode\",\n        col8: \"msg_type\",\n        col9: \"odr\",\n        col10: \"temperature\",\n        col11: \"x_rms_ACC_G\",\n        col12: \"x_max_ACC_G\",\n        col13: \"x_velocity_mm_sec\",\n        col14: \"x_displacement_mm\",\n        col15: \"x_peak_one_Hz\",\n        col16: \"x_peak_two_Hz\",\n        col17: \"x_peak_three_Hz\",\n        col18: \"y_rms_ACC_G\",\n        col19: \"y_max_ACC_G\",\n        col20: \"y_velocity_mm_sec\",\n        col21: \"y_displacement_mm\",\n        col22: \"y_peak_one_Hz\",\n        col23: \"y_peak_two_Hz\",\n        col24: \"y_peak_three_Hz\",\n        col25: \"z_rms_ACC_G\",\n        col26: \"z_max_ACC_G\",\n        col27: \"z_velocity_mm_sec\",\n        col28: \"z_displacement_mm\",\n        col29: \"z_peak_one_Hz\",\n        col30: \"z_peak_two_Hz\",\n        col31: \"z_peak_three_Hz\",\n        col32: \"rpm\",\n        col33: \"received\",\n        col34: \"addr\"\n    });\n} else if (sensor_type == 111) {\n    Object.assign(keyMapping, {\n        col1: \"time\",\n        col2: \"counter\",\n        col3: \"battery_percent\",\n        col4: \"rssi\",\n        col5: \"sensor_type\",\n        col6: \"firmware\",\n        col7: \"mode\",\n        col8: \"msg_type\",\n        col9: \"odr\",\n        col10: \"temperature\",\n        col11: \"x_rms_ACC_G\",\n        col12: \"x_max_ACC_G\",\n        col13: \"x_velocity_mm_sec\",\n        col14: \"x_displacement_mm\",\n        col15: \"x_peak_one_Hz\",\n        col16: \"x_peak_two_Hz\",\n        col17: \"x_peak_three_Hz\",\n        col18: \"y_rms_ACC_G\",\n        col19: \"y_max_ACC_G\",\n        col20: \"y_velocity_mm_sec\",\n        col21: \"y_displacement_mm\",\n        col22: \"y_peak_one_Hz\",\n        col23: \"y_peak_two_Hz\",\n        col24: \"y_peak_three_Hz\",\n        col25: \"z_rms_ACC_G\",\n        col26: \"z_max_ACC_G\",\n        col27: \"z_velocity_mm_sec\",\n        col28: \"z_displacement_mm\",\n        col29: \"z_peak_one_Hz\",\n        col30: \"z_peak_two_Hz\",\n        col31: \"z_peak_three_Hz\",\n        col32: \"rpm\",\n        col33: \"s2_odr\",\n        col34: \"s2_temperature\",\n        col35: \"x2_rms_ACC_G\",\n        col36: \"x2_max_ACC_G\",\n        col37: \"x2_velocity_mm_sec\",\n        col38: \"x2_displacement_mm\",\n        col39: \"x2_peak_one_Hz\",\n        col40: \"x2_peak_two_Hz\",\n        col41: \"x2_peak_three_Hz\",\n        col42: \"y2_rms_ACC_G\",\n        col43: \"y2_max_ACC_G\",\n        col44: \"y2_velocity_mm_sec\",\n        col45: \"y2_displacement_mm\",\n        col46: \"y2_peak_one_Hz\",\n        col47: \"y2_peak_two_Hz\",\n        col48: \"y2_peak_three_Hz\",\n        col49: \"z2_rms_ACC_G\",\n        col50: \"z2_max_ACC_G\",\n        col51: \"z2_velocity_mm_sec\",\n        col52: \"z2_displacement_mm\",\n        col53: \"z2_peak_one_Hz\",\n        col54: \"z2_peak_two_Hz\",\n        col55: \"z2_peak_three_Hz\",\n        col56: \"rpm_2\",\n        col57: \"received\",\n        col58: \"addr\"\n    });\n} else {\n    // If the sensor type is unknown, warn the user and stop the flow.\n    node.warn(`Unknown sensor_type: '${sensor_type}'. No key mapping available.`);\n    return null;\n}\n\n// Transform the payload using the selected mapping.\n// This logic is robust and was already well-written.\nmsg.payload = msg.payload.map(originalObject => {\n    const newObject = {};\n    for (const originalKey in originalObject) {\n        if (originalObject.hasOwnProperty(originalKey) && keyMapping.hasOwnProperty(originalKey)) {\n            const newKey = keyMapping[originalKey];\n            newObject[newKey] = originalObject[originalKey];\n        }\n    }\n    return newObject;\n});\n\n// Route the transformed message to the correct output.\nif (sensor_type == 110 || sensor_type == 114) {\n    // Output 1 for sensor types 110 & 114.\n    return [msg, null];\n} else {\n    // Output 2 for all other types (e.g., 111).\n    return [null, msg];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 1040,
        "wires": [
            [
                "3633e7dbbd2ffc75"
            ],
            [
                "bad92bec208da393"
            ]
        ]
    },
    {
        "id": "3633e7dbbd2ffc75",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 47",
        "mode": "link",
        "links": [
            "21ab969fdb30288f",
            "6c72da5b2f90c170",
            "71fe5998a0986d47",
            "999d7d7460edd890",
            "ba5f531a90b5c137",
            "3b39bce2d676b838",
            "29db896bdbe704e9",
            "f08296d37c8f3aba",
            "f8b55adc9cd5d2b6",
            "c50c02e0cb9fc2a9",
            "672d1596b929fe61",
            "30bcc6f673b5632f"
        ],
        "x": 3035,
        "y": 1020,
        "wires": []
    },
    {
        "id": "fb84cecb800a9c16",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "",
        "property": "toGauges",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1910,
        "y": 760,
        "wires": [
            [
                "24f40aac9b4f830e"
            ]
        ]
    },
    {
        "id": "058dcabfc9b5265b",
        "type": "ui-text-input",
        "z": "74f0f072aba2913a",
        "group": "4a3301f714eebc10",
        "name": "minr_114",
        "label": "Min Time:",
        "order": 2,
        "width": "0",
        "height": "0",
        "topic": "topic",
        "topicType": "msg",
        "mode": "time",
        "tooltip": "",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": false,
        "className": "gen4DatePickerChart",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "right",
        "iconInnerPosition": "inside",
        "x": 760,
        "y": 1020,
        "wires": [
            [
                "cc5e15e4887a3e74"
            ]
        ]
    },
    {
        "id": "f42e1c7e6a6d6f58",
        "type": "ui-text-input",
        "z": "74f0f072aba2913a",
        "group": "4a3301f714eebc10",
        "name": "max_114",
        "label": "Max Time:",
        "order": 3,
        "width": "0",
        "height": "0",
        "topic": "topic",
        "topicType": "msg",
        "mode": "time",
        "tooltip": "",
        "delay": "1000",
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": false,
        "className": "gen4DatePickerChart",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "right",
        "iconInnerPosition": "inside",
        "x": 760,
        "y": 980,
        "wires": [
            [
                "091cf959963ddb12"
            ]
        ]
    },
    {
        "id": "091cf959963ddb12",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "string-to-unix-timestamp",
        "func": "let addresses = flow.get('mac_selection_114') || null;\nif (addresses) { // If mac selection\n    if (typeof msg.payload === 'string') {\n        // Get the current date\n        let now = new Date();\n\n        // Get the time string from msg.payload\n        let timeString = msg.payload; // e.g., \"13:30\" or \"12:30\"\n\n        // Split the time string into hours and minutes\n        let parts = timeString.split(':');\n        let hours = parseInt(parts[0], 10);\n        let minutes = parseInt(parts[1], 10);\n\n        // Set the hours and minutes for the current date object\n        now.setHours(hours);\n        now.setMinutes(minutes);\n        now.setSeconds(0); // Optional: Set seconds to 0\n        now.setMilliseconds(0); // Optional: Set milliseconds to 0\n\n        msg = {};\n        // Get the Unix timestamp (milliseconds since epoch)\n        // To get seconds since epoch, divide by 1000: Math.floor(now.getTime() / 1000)\n        msg.max_time = now.getTime();\n\n        return msg;\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 980,
        "wires": [
            [
                "fe57d6c4c28e8b47"
            ]
        ]
    },
    {
        "id": "cc5e15e4887a3e74",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "string-to-unix-timestamp",
        "func": "let addresses = flow.get('mac_selection_114') || null;\nif (addresses) { // If mac selection\n    if (typeof msg.payload === 'string') {\n        // Get the current date\n        let now = new Date();\n\n        // Get the time string from msg.payload\n        let timeString = msg.payload; // e.g., \"13:30\" or \"12:30\"\n\n        // Split the time string into hours and minutes\n        let parts = timeString.split(':');\n        let hours = parseInt(parts[0], 10);\n        let minutes = parseInt(parts[1], 10);\n\n        // Set the hours and minutes for the current date object\n        now.setHours(hours);\n        now.setMinutes(minutes);\n        now.setSeconds(0); // Optional: Set seconds to 0\n        now.setMilliseconds(0); // Optional: Set milliseconds to 0\n\n        msg = {};\n        // Get the Unix timestamp (milliseconds since epoch)\n        // To get seconds since epoch, divide by 1000: Math.floor(now.getTime() / 1000)\n        msg.min_time = now.getTime();\n\n        return msg;\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1020,
        "wires": [
            [
                "c7f96436f88ebb64"
            ]
        ]
    },
    {
        "id": "fe57d6c4c28e8b47",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 980,
        "wires": [
            [
                "7d3ec08fd01e6228"
            ]
        ]
    },
    {
        "id": "c7f96436f88ebb64",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "min_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 1020,
        "wires": [
            [
                "7d3ec08fd01e6228"
            ]
        ]
    },
    {
        "id": "e69efd5edba2c02b",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "get-selection-mac",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mac_selection_114",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "fromLive",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 920,
        "wires": [
            [
                "e22033e659ffe6fe"
            ]
        ]
    },
    {
        "id": "6735bfe911d78ea9",
        "type": "ui-switch",
        "z": "74f0f072aba2913a",
        "name": "Live",
        "label": "Live Data",
        "group": "4a3301f714eebc10",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "switch_live_114",
        "layout": "row-spread",
        "clickableArea": "label",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "mdi-play-circle-outline",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "mdi-pause-circle-outline",
        "offcolor": "",
        "x": 410,
        "y": 920,
        "wires": [
            [
                "a7dba3edc4cbb3ff"
            ]
        ]
    },
    {
        "id": "a7dba3edc4cbb3ff",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "evaluate-live",
        "func": "let msg1 = {};\nlet addresses = flow.get('mac_selection_114') || null;\nif(addresses){ // If mac selection\n    if(msg.payload){ // if true\n        flow.set('live', false);\n        msg1.ui_update = {\n            \"label\": \"Paused\"\n        }\n        msg.enabled = true;\n    } else{\n        msg1.ui_update = {\n            \"label\": \"Live Data\"\n        }\n        msg.enabled = false;\n        flow.set('live', true);\n        flow.set('min_time', undefined);\n        flow.set('max_time', undefined);\n    }\n    return [msg, msg1];\n} else {\n    msg1.payload = false;\n    msg.enabled = false;\n    return [msg, msg1];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 920,
        "wires": [
            [
                "f42e1c7e6a6d6f58",
                "058dcabfc9b5265b",
                "7d3ec08fd01e6228",
                "4e3586203d43e280",
                "cdd173c09b746d57"
            ],
            [
                "6735bfe911d78ea9"
            ]
        ]
    },
    {
        "id": "cb1d57a6956bf9d5",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "live-data",
        "property": "live",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2920,
        "y": 340,
        "wires": [
            [
                "69694938601f0b58"
            ]
        ]
    },
    {
        "id": "6133fe9b9cdde58a",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "build-path",
        "func": "let base_path_ = flow.get(\"base_path_114\") || null;\nlet filename = base_path_;\n\nlet type = msg.payload.type;\nlet addr = msg.payload.mac;\nlet base_path = filename;\n\nmsg.filename = base_path + type + \"/\" + addr + \"/FLY/\" + \"fly.log\";\n\nmsg.payload = msg.payload.reported_config;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "cd122f4b28a06d62"
            ]
        ]
    },
    {
        "id": "cd122f4b28a06d62",
        "type": "file",
        "z": "74f0f072aba2913a",
        "name": "Write FLY",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1140,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "6d701b75724b2c82",
        "type": "function",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "build-FLY-path-to-load",
        "func": "let base_path = flow.get(\"base_path_114\") || null;\nlet count = flow.get(\"mac_count_114\") || null;\nlet addresses = flow.get(\"mac_addresses_114\") || null;\n\nlet type = {};\nlet addr = flow.get('mac_selection_114') || null;\n\nif (base_path != null && count != null && addresses != null && addr != null){\n    for (let index = 0; index < count; index++) {\n        if (addresses[index].mac == addr){\n            type = addresses[index].type;\n            flow.set(\"type_114\", type);\n        }\n    }\n    msg.filename = base_path + type + \"/\" + addr + \"/FLY/\" + \"fly.log\";\n    if(type == 110 || type == 114) return [msg, null];\n    else if(type == 111) return [null, msg];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3720,
        "y": 740,
        "wires": [
            [
                "4a07a32a3ab1b433"
            ],
            [
                "dd57661c5c7e8538"
            ]
        ]
    },
    {
        "id": "4a07a32a3ab1b433",
        "type": "file in",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "path",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3930,
        "y": 720,
        "wires": [
            [
                "04949fc80df81808"
            ]
        ]
    },
    {
        "id": "04949fc80df81808",
        "type": "json",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4070,
        "y": 720,
        "wires": [
            [
                "d48e3df243069a66"
            ]
        ]
    },
    {
        "id": "7d3ec08fd01e6228",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "get-and-set-max-min-time",
        "func": "// add if to reset context when press to live button.\nif(msg.enabled){\n    context.set('max_time', undefined);\n    context.set('max_time', undefined);\n} else {\n    let max_time = msg.max_time || context.get('max_time');\n    let min_time = msg.min_time || context.get('min_time');\n\n    if(max_time && min_time){\n        context.set('max_time', max_time);\n        context.set('min_time', min_time);\n        msg.max_time = max_time;\n        msg.min_time = min_time;\n        return msg;\n    } else {\n        if (max_time) context.set('max_time', max_time);\n        if (min_time) context.set('min_time', min_time);\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 960,
        "wires": [
            [
                "e69efd5edba2c02b"
            ]
        ]
    },
    {
        "id": "735d961aff7aae3d",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "name": "link in 12",
        "links": [
            "bf4b9d24d246aee3"
        ],
        "x": 105,
        "y": 1020,
        "wires": [
            [
                "43e94df074141e3d",
                "734aa104c158af0a"
            ]
        ]
    },
    {
        "id": "43e94df074141e3d",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "disable-time-after-clear",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1020,
        "wires": [
            [
                "f42e1c7e6a6d6f58",
                "058dcabfc9b5265b"
            ]
        ]
    },
    {
        "id": "734aa104c158af0a",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "init-state-after-clear",
        "func": "msg.ui_update = {\n    \"label\": \"Live Data\"\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 920,
        "wires": [
            [
                "6735bfe911d78ea9"
            ]
        ]
    },
    {
        "id": "887fcddec623ab75",
        "type": "catch",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "",
        "scope": [
            "4a07a32a3ab1b433"
        ],
        "uncaught": false,
        "x": 4270,
        "y": 800,
        "wires": [
            [
                "67b55719c81956dd"
            ]
        ]
    },
    {
        "id": "67b55719c81956dd",
        "type": "change",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "no-fly-message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No \"FLY\" message has been received from this sensor yet.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4420,
        "y": 800,
        "wires": [
            [
                "94ebd5ae11609e4f"
            ]
        ]
    },
    {
        "id": "8c01ce936f539f69",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "enable-address-group",
        "func": "let msg1 = {};\nlet addresses = flow.get('mac_selection_114') || null;\nif(addresses){\n    let live = msg.live;\n    let config = msg.config;\n    let lastLive = flow.get('lastlive');\n    let unit = {};\n    if(live || config){\n        if(config){\n            unit = {\n                groups:\n                {\n                    disable:\n                        [\n                            \"gen4Vibration:gen4SelectMac\",\n                            \"gen4Vibration:gen4Download\",\n                            \"gen4Vibration:gen4ConfigCharts\"\n                        ]\n                }\n            }\n        } else {\n            unit = {\n                groups:\n                {\n                    disable:\n                        [\n                            \"gen4Vibration:gen4SelectMac\",\n                            \"gen4Vibration:gen4Download\"\n                        ]\n                }\n            }\n            msg1.enabled = false;\n            flow.set('lastlive', live);\n        }\n    }else if((live == false) || (config == false)){\n        if(config == false){\n            if(lastLive){\n                unit = {\n                    groups:\n                    {\n                        enable:\n                            [\n                                \"gen4Vibration:gen4ConfigCharts\"\n                            ]\n                    }\n                }\n            }\n            else {\n                unit = {\n                    groups:\n                    {\n                        enable:\n                            [\n                                \"gen4Vibration:gen4SelectMac\",\n                                \"gen4Vibration:gen4Download\",\n                                \"gen4Vibration:gen4ConfigCharts\"\n                            ]\n                    }\n                }\n            }\n        }else if (live == false){ \n            unit = {\n                groups:\n                {\n                    enable:\n                        [\n                            \"gen4Vibration:gen4SelectMac\",\n                            \"gen4Vibration:gen4Download\"\n                        ]\n                }\n            }\n            msg1.enabled = true;\n            flow.set('lastlive', live);\n        }\n    }\n    msg.payload = unit;\n    return [msg, msg1];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 860,
        "wires": [
            [
                "113fd8f10744898f"
            ],
            [
                "a868714bee51b4aa"
            ]
        ]
    },
    {
        "id": "113fd8f10744898f",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "ae6382c2c39d1710"
        ],
        "x": 1065,
        "y": 840,
        "wires": []
    },
    {
        "id": "fce5ab988eb080c3",
        "type": "ui-notification",
        "z": "74f0f072aba2913a",
        "ui": "ec459411017ddf37",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "60",
        "showCountdown": false,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": true,
        "className": "",
        "name": "",
        "x": 2620,
        "y": 240,
        "wires": [
            [
                "20f3a8375dcd8c3c"
            ]
        ]
    },
    {
        "id": "4e3586203d43e280",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "live",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 860,
        "wires": [
            [
                "8c01ce936f539f69"
            ]
        ]
    },
    {
        "id": "20f3a8375dcd8c3c",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "close-and-timeout",
        "func": "let payload = msg.payload;\nif (payload == \"dismiss_clicked\" || msg.payload == \"timeout\"){\n    msg.config = false;\n} else {\n    msg.config = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2830,
        "y": 280,
        "wires": [
            [
                "816751554566acac"
            ]
        ]
    },
    {
        "id": "816751554566acac",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "2d789d2f8720ba36"
        ],
        "x": 3035,
        "y": 280,
        "wires": []
    },
    {
        "id": "2d789d2f8720ba36",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "name": "link in 14",
        "links": [
            "816751554566acac"
        ],
        "x": 775,
        "y": 820,
        "wires": [
            [
                "8c01ce936f539f69"
            ]
        ]
    },
    {
        "id": "cdd173c09b746d57",
        "type": "switch",
        "z": "74f0f072aba2913a",
        "name": "mac-selection",
        "property": "mac_selection_114",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1420,
        "y": 920,
        "wires": [
            [
                "e69efd5edba2c02b"
            ]
        ]
    },
    {
        "id": "48dac07365feb85b",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "build-sensor-structure-and-headers",
        "func": "// Check if msg.payload and sensor_data exist\nif (msg.payload) {\n    // Normalize MAC address (e.g., lowercase for consistent comparison)\n    const newMAC = msg.payload.addr;\n    // Initialize flow storage for MAC addresses and counter\n    let macAddresses = flow.get('mac_addresses_114') || [];\n\n\n    // Get the sensor_data object\n    const sensorData = msg.payload;\n    const type = msg.payload.sensor_type;\n    let columnOrder = [];\n    if (type == 110 || type == 114) {\n        // Define the desired order of columns (optional, to ensure specific order)\n        columnOrder = [\n            \"time\",\n            \"counter\",\n            \"battery_percent\",\n            \"rssi\",\n            \"sensor_type\",\n            \"firmware\",\n            \"mode\",\n            \"msg_type\",\n            \"odr\",\n            \"temperature\",\n            \"x_rms_ACC_G\",\n            \"x_max_ACC_G\",\n            \"x_velocity_mm_sec\",\n            \"x_displacement_mm\",\n            \"x_peak_one_Hz\",\n            \"x_peak_two_Hz\",\n            \"x_peak_three_Hz\",\n            \"y_rms_ACC_G\",\n            \"y_max_ACC_G\",\n            \"y_velocity_mm_sec\",\n            \"y_displacement_mm\",\n            \"y_peak_one_Hz\",\n            \"y_peak_two_Hz\",\n            \"y_peak_three_Hz\",\n            \"z_rms_ACC_G\",\n            \"z_max_ACC_G\",\n            \"z_velocity_mm_sec\",\n            \"z_displacement_mm\",\n            \"z_peak_one_Hz\",\n            \"z_peak_two_Hz\",\n            \"z_peak_three_Hz\",\n            \"rpm\",\n            \"received\",\n            \"addr\"\n        ];\n    } else if (type == 111) {\n        // Define the desired order of columns (optional, to ensure specific order)\n        columnOrder = [\n            \"time\",\n            \"counter\",\n            \"battery_percent\",\n            \"rssi\",\n            \"sensor_type\",\n            \"firmware\",\n            \"mode\",\n            \"msg_type\",\n            \"s1_odr\",\n            \"s1_temperature\",\n            \"x1_rms_ACC_G\",\n            \"x1_max_ACC_G\",\n            \"x1_velocity_mm_sec\",\n            \"x1_displacement_mm\",\n            \"x1_peak_one_Hz\",\n            \"x1_peak_two_Hz\",\n            \"x1_peak_three_Hz\",\n            \"y1_rms_ACC_G\",\n            \"y1_max_ACC_G\",\n            \"y1_velocity_mm_sec\",\n            \"y1_displacement_mm\",\n            \"y1_peak_one_Hz\",\n            \"y1_peak_two_Hz\",\n            \"y1_peak_three_Hz\",\n            \"z1_rms_ACC_G\",\n            \"z1_max_ACC_G\",\n            \"z1_velocity_mm_sec\",\n            \"z1_displacement_mm\",\n            \"z1_peak_one_Hz\",\n            \"z1_peak_two_Hz\",\n            \"z1_peak_three_Hz\",\n            \"rpm_1\",\n            \"s2_odr\",\n            \"s2_temperature\",\n            \"x2_rms_ACC_G\",\n            \"x2_max_ACC_G\",\n            \"x2_velocity_mm_sec\",\n            \"x2_displacement_mm\",\n            \"x2_peak_one_Hz\",\n            \"x2_peak_two_Hz\",\n            \"x2_peak_three_Hz\",\n            \"y2_rms_ACC_G\",\n            \"y2_max_ACC_G\",\n            \"y2_velocity_mm_sec\",\n            \"y2_displacement_mm\",\n            \"y2_peak_one_Hz\",\n            \"y2_peak_two_Hz\",\n            \"y2_peak_three_Hz\",\n            \"z2_rms_ACC_G\",\n            \"z2_max_ACC_G\",\n            \"z2_velocity_mm_sec\",\n            \"z2_displacement_mm\",\n            \"z2_peak_one_Hz\",\n            \"z2_peak_two_Hz\",\n            \"z2_peak_three_Hz\",\n            \"rpm_2\",\n            \"received\",\n            \"addr\"\n        ];\n    }\n    // Filter out any columns that don't exist in sensorData\n    const availableColumns = columnOrder.filter(key => key in sensorData);\n\n    // Check if MAC address already exists\n    const existingEntry = macAddresses.find(entry => entry.mac === newMAC);\n\n    // Join the columns into a comma-separated string without a trailing space\n    msg.columns = availableColumns.join(\",\");\n    // Check if the file exists using context flow\n    let today = new Date().toDateString();\n    let lastHeaderDate = flow.get('lastHeaderDate') || '';\n    \n    // If the file does not exist, or a new day has started, add headers\n    if (!existingEntry || (lastHeaderDate !== today)) {\n        msg.payload = msg.columns + \"\\n\" + availableColumns.map(key => sensorData[key]).join(\",\");\n        flow.set('lastHeaderDate', today);\n    }else {\n        msg.payload = availableColumns.map(key => sensorData[key]).join(\",\");\n    }\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 340,
        "wires": [
            [
                "1f6559139804902b"
            ]
        ]
    },
    {
        "id": "787d92bf1db2b1ee",
        "type": "comment",
        "z": "74f0f072aba2913a",
        "name": "/home/ncdio/.node-red/ncd_dashboard/log/",
        "info": "",
        "x": 480,
        "y": 180,
        "wires": []
    },
    {
        "id": "69694938601f0b58",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "b5276dd0ff2c7158"
        ],
        "x": 3035,
        "y": 340,
        "wires": []
    },
    {
        "id": "b5276dd0ff2c7158",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "name": "link in 15",
        "links": [
            "69694938601f0b58"
        ],
        "x": 1305,
        "y": 880,
        "wires": [
            [
                "cdd173c09b746d57"
            ]
        ]
    },
    {
        "id": "bad92bec208da393",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "21ab969fdb30288f",
            "6c72da5b2f90c170",
            "71fe5998a0986d47",
            "999d7d7460edd890",
            "ba5f531a90b5c137",
            "3b39bce2d676b838",
            "29db896bdbe704e9",
            "f08296d37c8f3aba",
            "f8b55adc9cd5d2b6",
            "c50c02e0cb9fc2a9",
            "672d1596b929fe61",
            "30bcc6f673b5632f",
            "eeebbeb85197ecc8",
            "6b99dd54170d69f3",
            "24dee64eb560f0ae",
            "081d75fa1257ebbd",
            "f0fd5394412abb54",
            "17ea968836d683fe",
            "3982b468e4d0f98f",
            "8d55b9846ba3b062",
            "2b5829f954a1ee45",
            "5d740b4a5ad85dc8",
            "62fd3fc728da800a"
        ],
        "x": 3035,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cae9d8dbfd2a7aa8",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getLastHeard",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$moment(payload.col33).format(\"yyyy-MM-dd HH:mm:ss\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 420,
        "wires": [
            [
                "97a68286ef75b23c"
            ]
        ]
    },
    {
        "id": "61399dcd2df1e6f6",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 16",
        "links": [
            "bf4b9d24d246aee3",
            "525d1c944c4b007b"
        ],
        "x": 4055,
        "y": 1000,
        "wires": [
            [
                "7601be67da67205e"
            ]
        ]
    },
    {
        "id": "7601be67da67205e",
        "type": "ui-gauge",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "vpTempGauge",
        "group": "c1934b244a58cbcd",
        "order": 2,
        "value": "payload",
        "valueType": "msg",
        "width": "1",
        "height": "4",
        "gtype": "gauge-34",
        "gstyle": "needle",
        "title": "",
        "alwaysShowTitle": false,
        "units": "",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c",
                "text": "",
                "textType": "label"
            },
            {
                "from": "40",
                "color": "#ffc800",
                "text": "",
                "textType": "label"
            },
            {
                "from": "70",
                "color": "#ea5353",
                "text": "",
                "textType": "label"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": "0",
        "sizeGap": "0",
        "sizeKeyThickness": "12",
        "styleRounded": true,
        "styleGlow": false,
        "className": "gen4gauge",
        "x": 4200,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "eeebbeb85197ecc8",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 17",
        "links": [
            "c76fe27ccb6fd037",
            "bf4b9d24d246aee3",
            "bad92bec208da393"
        ],
        "x": 4055,
        "y": 1040,
        "wires": [
            [
                "66930b5d8531b14f"
            ]
        ]
    },
    {
        "id": "66930b5d8531b14f",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "c1934b244a58cbcd",
        "name": "vpTempChart",
        "label": "TEMPERATURE [°C] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "Temperature",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "s2_temperature",
        "yAxisPropertyType": "property",
        "ymin": "-40",
        "ymax": "85",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#ffffff",
            "#f8f125",
            "#ff0f0f",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "2",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4190,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "924e6ca62627cadf",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getTemp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col34",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 500,
        "wires": [
            [
                "525d1c944c4b007b"
            ]
        ]
    },
    {
        "id": "525d1c944c4b007b",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "61399dcd2df1e6f6"
        ],
        "x": 3035,
        "y": 500,
        "wires": []
    },
    {
        "id": "1f6fdc412e295df8",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getRPM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col56",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 540,
        "wires": [
            [
                "5f070293bad0bbf3"
            ]
        ]
    },
    {
        "id": "5f070293bad0bbf3",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "cb20dd623969d883"
        ],
        "x": 3035,
        "y": 540,
        "wires": []
    },
    {
        "id": "cb20dd623969d883",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 18",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "5f070293bad0bbf3"
        ],
        "x": 3795,
        "y": 1000,
        "wires": [
            [
                "0544ef7e4883a870"
            ]
        ]
    },
    {
        "id": "0544ef7e4883a870",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "11653f0fae161b2a",
        "order": 2,
        "width": "1",
        "height": "4",
        "name": "",
        "label": "RPM",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": "35",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 3890,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6b99dd54170d69f3",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 19",
        "links": [
            "c76fe27ccb6fd037",
            "bf4b9d24d246aee3",
            "bad92bec208da393"
        ],
        "x": 3795,
        "y": 1040,
        "wires": [
            [
                "59a061462ff89654"
            ]
        ]
    },
    {
        "id": "59a061462ff89654",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "11653f0fae161b2a",
        "name": "vpRPMChart",
        "label": "RPM (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "RPM",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "rpm_2",
        "yAxisPropertyType": "property",
        "ymin": "0",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#ffffff",
            "#f8f125",
            "#ff0f0f",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "2",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 3910,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "24dee64eb560f0ae",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 20",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "bad92bec208da393"
        ],
        "x": 3375,
        "y": 1320,
        "wires": [
            [
                "976d435b467605f9"
            ]
        ]
    },
    {
        "id": "976d435b467605f9",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "d08c88db20226da9",
        "name": "RMS (G) (probe 2)",
        "label": "RMS Acceleration 2 [G] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "[\"x2_rms_ACC_G\",\"y2_rms_ACC_G\",\"z2_rms_ACC_G\"]",
        "categoryType": "json",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "data",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": true,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#2095f2",
            "#ffffff",
            "#000000",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 3530,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "081d75fa1257ebbd",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 21",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "bad92bec208da393"
        ],
        "x": 3885,
        "y": 1320,
        "wires": [
            [
                "c805dee08ffac0a4"
            ]
        ]
    },
    {
        "id": "c805dee08ffac0a4",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "ddfc512b4a6c73df",
        "name": "X - Velocity (mm/sec)  (probe 2)",
        "label": "X - Velocity [mm/sec] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "z2_velocity_mm_sec",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "z2_velocity_mm_sec",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#2ca02c",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4050,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "f0fd5394412abb54",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 22",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "bad92bec208da393"
        ],
        "x": 3375,
        "y": 1380,
        "wires": [
            [
                "f1ef16a73945a8f0"
            ]
        ]
    },
    {
        "id": "f1ef16a73945a8f0",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "a496ea282a46fac7",
        "name": "MAX (G) (probe 2)",
        "label": "MAX Acceleration [G] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "[\"x2_max_ACC_G\",\"y2_max_ACC_G\",\"z2_max_ACC_G\"]",
        "categoryType": "json",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "data",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": true,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#2095f2",
            "#ffffff",
            "#000000",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "bezier",
        "x": 3530,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "17ea968836d683fe",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 23",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "bad92bec208da393"
        ],
        "x": 3375,
        "y": 1440,
        "wires": [
            [
                "1740d2535df65a08"
            ]
        ]
    },
    {
        "id": "1740d2535df65a08",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "473c4ec0c93ca86f",
        "name": "PEAK (Hz) (probe 2)",
        "label": "Amplitude Peak [Hz] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "[\"x2_peak_one_Hz\",\"y2_peak_one_Hz\",\"z2_peak_one_Hz\",\"x2_peak_two_Hz\",\"y2_peak_two_Hz\",\"z2_peak_two_Hz\",\"x2_peak_three_Hz\",\"y2_peak_three_Hz\",\"z2_peak_three_Hz\"]",
        "categoryType": "json",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "data",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": true,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#2095f2",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "bezier",
        "x": 3540,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "3982b468e4d0f98f",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 24",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "bad92bec208da393"
        ],
        "x": 3885,
        "y": 1380,
        "wires": [
            [
                "026273312a522def"
            ]
        ]
    },
    {
        "id": "026273312a522def",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "246456e817215935",
        "name": "Y - Velocity (mm/sec) (probe 2)",
        "label": "Y - Velocity [mm/sec] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "y2_velocity_mm_sec",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "y2_velocity_mm_sec",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#98df8a",
            "#98df8a",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4050,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "8d55b9846ba3b062",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 25",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "bad92bec208da393"
        ],
        "x": 3885,
        "y": 1440,
        "wires": [
            [
                "1ba8d3c318117ac5"
            ]
        ]
    },
    {
        "id": "1ba8d3c318117ac5",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "d47dac8251b91244",
        "name": "Z - Velocity (mm/sec) (probe 2)",
        "label": "Z - Velocity [mm/sec] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "z2_velocity_mm_sec",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "z2_velocity_mm_sec",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#d62728",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4050,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "300f2447370a0773",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "b1e903e32269aa71",
        "name": "X - Displacement (mm)(probe 2)",
        "label": "X - Displacement [mm] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "x2_displacement_mm",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "x2_displacement_mm",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#ff9694",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4470,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "54ec94cb10fd4cff",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "029ec23ef73be07b",
        "name": "Y - Displacement (mm) (probe 2)",
        "label": "Y - Displacement [mm] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "y2_displacement_mm",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "y2_displacement_mm",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#9467bd",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4480,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "050a0aa3839d851c",
        "type": "ui-chart",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "47e67bb2414c9173",
        "name": "Z - Displacement (mm) (probe 2)",
        "label": "Z - Displacement [mm] (Probe 2)",
        "order": 1,
        "chartType": "line",
        "category": "z2_displacement_mm",
        "categoryType": "str",
        "xAxisLabel": "",
        "xAxisProperty": "received",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "z2_displacement_mm",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "3",
        "showLegend": false,
        "removeOlder": "24",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#c5b0d5",
            "#ffffff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#ffffff"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#707070"
        ],
        "gridColorDefault": false,
        "width": "4",
        "height": "4",
        "className": "",
        "interpolation": "smooth",
        "x": 4470,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "2b5829f954a1ee45",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 26",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "bad92bec208da393"
        ],
        "x": 4305,
        "y": 1320,
        "wires": [
            [
                "300f2447370a0773"
            ]
        ]
    },
    {
        "id": "5d740b4a5ad85dc8",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 27",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "bad92bec208da393"
        ],
        "x": 4305,
        "y": 1380,
        "wires": [
            [
                "54ec94cb10fd4cff"
            ]
        ]
    },
    {
        "id": "62fd3fc728da800a",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 28",
        "links": [
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037",
            "bad92bec208da393"
        ],
        "x": 4305,
        "y": 1440,
        "wires": [
            [
                "050a0aa3839d851c"
            ]
        ]
    },
    {
        "id": "4686c60121c8aa34",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getODR2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.col33",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 620,
        "wires": [
            [
                "aea8bbd7b02663f6"
            ]
        ]
    },
    {
        "id": "aea8bbd7b02663f6",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "9a29db5ac04a0b6a"
        ],
        "x": 3035,
        "y": 640,
        "wires": []
    },
    {
        "id": "9a29db5ac04a0b6a",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "name": "link in 29",
        "links": [
            "aea8bbd7b02663f6",
            "96e5aa9dda89ea9d",
            "bf4b9d24d246aee3",
            "c76fe27ccb6fd037"
        ],
        "x": 3575,
        "y": 1040,
        "wires": [
            [
                "5f257f13b99c50b0"
            ]
        ]
    },
    {
        "id": "0c29d08bb8ffbd9d",
        "type": "change",
        "z": "74f0f072aba2913a",
        "name": "getODR2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2900,
        "y": 660,
        "wires": [
            [
                "aea8bbd7b02663f6"
            ]
        ]
    },
    {
        "id": "3d5e816cc686e2cc",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "probe-validator",
        "func": "if (!msg.fromLive) {\n    let type = flow.get(\"type_114\");\n    if(type == 110 || type == 114){\n        msg = {};\n        msg.ui_update = { \n            \"label\": \"\"\n        }\n        msg.enabled = false;\n        return msg;\n    } else if(type == 111){\n        msg = {};\n        msg.ui_update = { \n            \"label\": \"ODR 2:\"\n        }\n        msg.enabled = true;\n        return msg;\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2300,
        "y": 720,
        "wires": [
            [
                "96e5aa9dda89ea9d"
            ]
        ]
    },
    {
        "id": "96e5aa9dda89ea9d",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "9a29db5ac04a0b6a"
        ],
        "x": 2415,
        "y": 720,
        "wires": []
    },
    {
        "id": "5f257f13b99c50b0",
        "type": "ui-text",
        "z": "74f0f072aba2913a",
        "g": "33cfbcff7312a6e6",
        "group": "6b4cfee43f267b82",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": true,
        "font": "",
        "fontSize": "16",
        "color": "#ffffff",
        "wrapText": false,
        "className": "",
        "x": 3670,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ae6382c2c39d1710",
        "type": "link in",
        "z": "74f0f072aba2913a",
        "g": "e61f949b39718963",
        "name": "link in 13",
        "links": [
            "113fd8f10744898f"
        ],
        "x": 4385,
        "y": 320,
        "wires": [
            [
                "91131f71bf01b698"
            ]
        ]
    },
    {
        "id": "a868714bee51b4aa",
        "type": "link out",
        "z": "74f0f072aba2913a",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "9eb3395d3a8c2347"
        ],
        "x": 1065,
        "y": 880,
        "wires": []
    },
    {
        "id": "f6f492c6fdb8c5d6",
        "type": "function",
        "z": "74f0f072aba2913a",
        "name": "single-dual-ch",
        "func": "let sensor_type = msg.payload.col5 || null;\nif(sensor_type == 110 || sensor_type == 114){\n    return [msg, null];\n} else if (sensor_type == 111){\n    return [null, msg];\n} else {\n    msg.payload.col33 = '--';\n    msg.payload.col0 = '--';\n    return [msg, msg];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 540,
        "wires": [
            [
                "cae9d8dbfd2a7aa8",
                "5d4d25aed1553016",
                "0c29d08bb8ffbd9d"
            ],
            [
                "b66f017a24d49bf7",
                "924e6ca62627cadf",
                "1f6fdc412e295df8",
                "4686c60121c8aa34",
                "5d4d25aed1553016"
            ]
        ]
    },
    {
        "id": "dd57661c5c7e8538",
        "type": "file in",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "path",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3930,
        "y": 760,
        "wires": [
            [
                "75ed8d32195e54d3"
            ]
        ]
    },
    {
        "id": "75ed8d32195e54d3",
        "type": "json",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4070,
        "y": 760,
        "wires": [
            [
                "27449de978af8cfc"
            ]
        ]
    },
    {
        "id": "27449de978af8cfc",
        "type": "template",
        "z": "74f0f072aba2913a",
        "g": "1c1487df525464e4",
        "name": "config_results-to-pop-up-window",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"diag_wrapper\">\n    <h3>Address: {{payload.addr}} | Last Heard: {{payload.lastHeard}}</h3>\n    <table>\n        <thead>\n            <tr>\n                <th>CONFIGURATION</th>\n                <th>VALUE</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>Firmware Version</td>\n                <td>{{payload.firmware}}</td>\n            </tr>\n            <tr>\n                <td>Destination Address</td>\n                <td>{{payload.destination_address}}</td>\n            </tr>\n            <tr>\n                <td>Operation Mode</td>\n                <td>{{payload.mode}}</td>\n            </tr>\n            <tr>\n                <td>Output Data Rate (ODR) - Probe 1</td>\n                <td>{{payload.odr_1}}</td>\n            </tr>\n             <tr>\n                <td>Output Data Rate (ODR) - Probe 2</td>\n                <td>{{payload.odr_2}}</td>\n            </tr>\n            <tr>\n                <td>Sampling Duration - Probe 1</td>\n                <td>{{payload.sampling_duration_1}}</td>\n            </tr>\n            <tr>\n                <td>Sampling Duration - Probe 2</td>\n                <td>{{payload.sampling_duration_2}}</td>\n            </tr>\n            <tr>\n                <td>Filter Status</td>\n                <td>{{payload.filter_status}}</td>\n            </tr>\n            <tr>\n                <td>Low Pass Filter Coefficient - Probe 1</td>\n                <td>{{payload.lpf_coeff_1}}</td>\n            </tr>\n            <tr>\n                <td>Low Pass Filter Coefficient - Probe 2</td>\n                <td>{{payload.lpf_coeff_2}}</td>\n            </tr>\n            <tr>\n                <td>Low Pass Filter Frequency - Probe 1</td>\n                <td>{{payload.lpf_freq_1}}</td>\n            </tr>\n            <tr>\n                <td>Low Pass Filter Frequency - Probe 2</td>\n                <td>{{payload.lpf_freq_2}}</td>\n            </tr>\n            <tr>\n                <td>High Pass Filter Coefficient - Probe 1</td>\n                <td>{{payload.hpf_coeff_1}}</td>\n            </tr>\n            <tr>\n                <td>High Pass Filter Coefficient - Probe 2</td>\n                <td>{{payload.hpf_coeff_2}}</td>\n            </tr>\n            <tr>\n                <td>High Pass Filter Frequency - Probe 1</td>\n                <td>{{payload.hpf_freq_1}}</td>\n            </tr>\n            <tr>\n                <td>High Pass Filter Frequency - Probe 2</td>\n                <td>{{payload.hpf_freq_2}}</td>\n            </tr>\n            <tr>\n                <td>Sampling Interval</td>\n                <td>{{payload.sampling_interval}}</td>\n            </tr>\n            <tr>\n                <td>On Request Timeout</td>\n                <td>{{payload.on_request_timeout}}</td>\n            </tr>\n            <tr>\n                <td>DeadBand</td>\n                <td>{{payload.deadband}}</td>\n            </tr>\n            <tr>\n                <td>Payload Length</td>\n                <td>{{payload.payload_length}}</td>\n            </tr>\n            <tr>\n                <td>Full Scale Range (FSR)</td>\n                <td>{{payload.fsr}}</td>\n            </tr>\n            <tr>\n                <td>RPM Compute Status</td>\n                <td>{{payload.rpm_compute_status}}</td>\n            </tr>\n            <tr>\n                <td>Auto Raw Destination Address</td>\n                <td>{{payload.auto_raw_destination_address}}</td>\n            </tr>\n            <tr>\n                <td>Auto Raw Interval</td>\n                <td>{{payload.auto_raw_interval}}</td>\n            </tr>\n            <tr>\n                <td>Smart Mode - Skip Count</td>\n                <td>{{payload.smart_mode_skip_count}}</td>\n            </tr>\n            <tr>\n                <td>Smart Mode - Acceleration Threshold - Probe 1</td>\n                <td>{{payload.smart_mode_acc_threshold_probe_1}}</td>\n            </tr>\n             <tr>\n                <td>Smart Mode - Acceleration Threshold - Probe 2</td>\n                <td>{{payload.smart_mode_acc_threshold_probe_2}}</td>\n            </tr>\n            <tr>\n                <td>Uptime Counter - Probe 1</td>\n                <td>{{payload.uptime_counter_probe_1}}</td>\n            </tr>\n            <tr>\n                <td>Uptime Counter - Probe 2</td>\n                <td>{{payload.uptime_counter_probe_2}}</td>\n            </tr>\n            <tr>\n                <td>Max Transmission Raw Samples</td>\n                <td>{{payload.max_tx_raw_samples}}</td>\n            </tr>\n            <tr>\n                <td>Motion to Sampling Delay</td>\n                <td>{{payload.motion_to_sampling_delay}}</td>\n            </tr>\n            <tr>\n                <td>Max Number of Motion Transmission Per Interval</td>\n                <td>{{payload.max_num_of_motion_tx_per_interval}}</td>\n            </tr>\n            <tr>\n                <td>Hardware ID</td>\n                <td>{{payload.hardware_id}}</td>\n            </tr>\n            <tr>\n                <td>Reserved</td>\n                <td>{{payload.reserved}}</td>\n            </tr>\n            <tr>\n                <td>Transmission Lifetime Counter</td>\n                <td>{{payload.tx_lifetime_counter}}</td>\n            </tr>\n            <tr>\n                <td>RSSI</td>\n                <td>{{payload.rssi}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>",
        "output": "str",
        "x": 4370,
        "y": 760,
        "wires": [
            [
                "94ebd5ae11609e4f"
            ]
        ]
    },
    {
        "id": "108b08b06e2d677a",
        "type": "group",
        "z": "74f0f072aba2913a",
        "name": "",
        "style": {
            "stroke": "none",
            "fill": "#bfdbef",
            "fill-opacity": "0.5",
            "label": true
        },
        "nodes": [
            "8113151a2da45a13",
            "c034f6e31e838a34",
            "e4f53f54fcfc2273"
        ],
        "x": 3334,
        "y": 39,
        "w": 1292,
        "h": 82
    },
    {
        "id": "33cfbcff7312a6e6",
        "type": "group",
        "z": "74f0f072aba2913a",
        "name": "",
        "style": {
            "stroke": "none",
            "fill": "#bfdbef",
            "fill-opacity": "0.5",
            "label": true
        },
        "nodes": [
            "90e6192d9b4e41a2",
            "5c1edfa7f95b7f70",
            "1a7030fb1bfa64cf",
            "7bf4dc27d4be6b51",
            "bcab298ef595f49d",
            "1e85fceff218d73d",
            "2a19adcc03faaefd",
            "30bcc6f673b5632f",
            "18c23c601fa34721",
            "27177f696970ba49",
            "154ecbdb23ddf01a",
            "7c0dea051c06e1fe",
            "94b41b0dca8033f6",
            "d9e3767bd5e11937",
            "9c775ed0af28f438",
            "44d86bcf31af0079",
            "9d11ebbafbebf815",
            "d44b8133d0032393",
            "5b34e3823452064a",
            "96d321ba41dd19f3",
            "672d1596b929fe61",
            "29db896bdbe704e9",
            "f08296d37c8f3aba",
            "f8b55adc9cd5d2b6",
            "21ab969fdb30288f",
            "6c72da5b2f90c170",
            "71fe5998a0986d47",
            "999d7d7460edd890",
            "ba5f531a90b5c137",
            "3b39bce2d676b838",
            "c76fe27ccb6fd037",
            "1f26ae6dbb1cd08a",
            "0118f7252fb24937",
            "85ce39db1d0d2ad8",
            "0fb457a2a3f0c955",
            "c2a1fe17f87ea34f",
            "ac0d3e8a624161e5",
            "f4275b44c9050887",
            "6e9426aa42863fcd",
            "9af1b0a546ae1ee5",
            "c50c02e0cb9fc2a9",
            "83ba578c0b46bca8",
            "8a24745d274dca8b",
            "98da5c62d58d9751",
            "b54a9e20f8d9a5ae",
            "7b7fc642ea8c0de8",
            "e9a6e04941f9686d",
            "a36220971adc5841",
            "61399dcd2df1e6f6",
            "7601be67da67205e",
            "eeebbeb85197ecc8",
            "66930b5d8531b14f",
            "cb20dd623969d883",
            "0544ef7e4883a870",
            "6b99dd54170d69f3",
            "59a061462ff89654",
            "24dee64eb560f0ae",
            "976d435b467605f9",
            "081d75fa1257ebbd",
            "c805dee08ffac0a4",
            "f0fd5394412abb54",
            "f1ef16a73945a8f0",
            "17ea968836d683fe",
            "1740d2535df65a08",
            "3982b468e4d0f98f",
            "026273312a522def",
            "8d55b9846ba3b062",
            "1ba8d3c318117ac5",
            "300f2447370a0773",
            "54ec94cb10fd4cff",
            "050a0aa3839d851c",
            "2b5829f954a1ee45",
            "5d740b4a5ad85dc8",
            "62fd3fc728da800a",
            "9a29db5ac04a0b6a",
            "5f257f13b99c50b0"
        ],
        "x": 3334,
        "y": 879,
        "w": 1312,
        "h": 602
    },
    {
        "id": "e61f949b39718963",
        "type": "group",
        "z": "74f0f072aba2913a",
        "name": "",
        "style": {
            "stroke": "none",
            "fill": "#bfdbef",
            "fill-opacity": "0.5",
            "label": true
        },
        "nodes": [
            "2d32333322148b58",
            "d6ca7f65c0cdd05c",
            "9d86cbc7387eb9d5",
            "223905a2cf1dc2cd",
            "3e261f52d0ae4c0d",
            "dcd1ab83177a78ba",
            "69f176502ddb6172",
            "091a1bbe50d09d5a",
            "96e454e2da052933",
            "91131f71bf01b698",
            "f04c27227bd29867",
            "a46498e6245cd887",
            "bf4b9d24d246aee3",
            "2664ccde11b46bee",
            "b1fb7ec76b9f0a5e",
            "0c105b2658c88750",
            "6b527c46199b1720",
            "4c215ad93c6526b1",
            "c4c4f6f6cea38f75",
            "3b414228615b85dc",
            "e52a2ca0e119cf8b",
            "834f220d4d8d8164",
            "b865175187c07217",
            "3f206d83e47be21f",
            "44357fe2b0578d36",
            "8ed365a13732506e",
            "46ba59c51f1d3afe",
            "c126ab54e05a6983",
            "c8eec6ee3265ce34",
            "395e74579496fe30",
            "54434242db8b9ea2",
            "bf12f03f7168b2be",
            "ae6382c2c39d1710",
            "90bd54a3e02f434d",
            "ac19857639bd2943",
            "9eb3395d3a8c2347"
        ],
        "x": 3334,
        "y": 179,
        "w": 1312,
        "h": 462
    },
    {
        "id": "1c1487df525464e4",
        "type": "group",
        "z": "74f0f072aba2913a",
        "name": "",
        "style": {
            "stroke": "none",
            "fill": "#bfdbef",
            "fill-opacity": "0.55",
            "label": true
        },
        "nodes": [
            "9bb28a4c8e1246ce",
            "d48e3df243069a66",
            "94ebd5ae11609e4f",
            "6d701b75724b2c82",
            "4a07a32a3ab1b433",
            "04949fc80df81808",
            "887fcddec623ab75",
            "67b55719c81956dd",
            "dd57661c5c7e8538",
            "75ed8d32195e54d3",
            "27449de978af8cfc"
        ],
        "x": 3334,
        "y": 679,
        "w": 1312,
        "h": 162
    },
    {
        "id": "63c8e31dd0194b68",
        "type": "ui-group",
        "name": "gen4SelectMac",
        "page": "3c148a5ec9b4b2b7",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "gen4GroupSelectMac",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "3c148a5ec9b4b2b7",
        "type": "ui-page",
        "name": "gen4Vibration",
        "ui": "ec459411017ddf37",
        "path": "/gen4Vibration",
        "icon": "mdi-waveform",
        "layout": "grid",
        "theme": "e01eadf35316cb83",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "ad7531e06b2c6dc8",
        "type": "ui-group",
        "name": "gen4Temperature",
        "page": "3c148a5ec9b4b2b7",
        "width": "3",
        "height": 1,
        "order": 7,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "1d5cbe707db86244",
        "type": "ui-group",
        "name": "gen4Battery",
        "page": "3c148a5ec9b4b2b7",
        "width": "3",
        "height": 1,
        "order": 6,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "6b4cfee43f267b82",
        "type": "ui-group",
        "name": "gen4MsgType",
        "page": "3c148a5ec9b4b2b7",
        "width": "1",
        "height": "1",
        "order": 5,
        "showTitle": false,
        "className": "infoGroup",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "871f947c6bf37ced",
        "type": "ui-group",
        "name": "gen4ACCGroup_x",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 11,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ee40546169cc4f6e",
        "type": "ui-group",
        "name": "gen4VelDisplGroup_x",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 13,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e080ce6faa9dafc1",
        "type": "ui-group",
        "name": "gen4OneTwoThreeGroup_x",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 15,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2e65c7c2db11a067",
        "type": "ui-group",
        "name": "gen4ACCGroup_y",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 17,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ac28f055e2a68798",
        "type": "ui-group",
        "name": "gen4VelDisplGroup_y",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 19,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7799c09456a3cd22",
        "type": "ui-group",
        "name": "gen4OneTwoThreeGroup_y",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 21,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "b41a37f94361e78b",
        "type": "ui-group",
        "name": "gen4ACCGroup_z",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 23,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "bd2d49356e4ffaa7",
        "type": "ui-group",
        "name": "gen4VelDisplGroup_z",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 25,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9351763853fe951d",
        "type": "ui-group",
        "name": "gen4OneTwoThreeGroup_z",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 27,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ca515ecadb7b11f6",
        "type": "ui-group",
        "name": "gen4RPM",
        "page": "3c148a5ec9b4b2b7",
        "width": "3",
        "height": 1,
        "order": 9,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9304e6a84ec00cee",
        "type": "ui-group",
        "name": "gen4Firmware",
        "page": "3c148a5ec9b4b2b7",
        "width": "1",
        "height": "1",
        "order": 4,
        "showTitle": false,
        "className": "infoGroup",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "4a3301f714eebc10",
        "type": "ui-group",
        "name": "gen4ConfigCharts",
        "page": "3c148a5ec9b4b2b7",
        "width": "1",
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "infoGroup",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ec459411017ddf37",
        "type": "ui-base",
        "name": "ncd-ui-base",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "page",
        "navigationStyle": "default",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": 5,
        "showDisconnectNotification": true,
        "allowInstall": true
    },
    {
        "id": "967e40c59097eef1",
        "type": "ui-group",
        "name": "gen4Download",
        "page": "3c148a5ec9b4b2b7",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "gen4GrupoDownload",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c1934b244a58cbcd",
        "type": "ui-group",
        "name": "gen4Temperature2",
        "page": "3c148a5ec9b4b2b7",
        "width": "3",
        "height": 1,
        "order": 8,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "11653f0fae161b2a",
        "type": "ui-group",
        "name": "gen4RPM2",
        "page": "3c148a5ec9b4b2b7",
        "width": "3",
        "height": 1,
        "order": 10,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d08c88db20226da9",
        "type": "ui-group",
        "name": "gen4ACCGroup_x2",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 12,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ddfc512b4a6c73df",
        "type": "ui-group",
        "name": "gen4VelDisplGroup_x2",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 14,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "a496ea282a46fac7",
        "type": "ui-group",
        "name": "gen4ACCGroup_y2",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 18,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "473c4ec0c93ca86f",
        "type": "ui-group",
        "name": "gen4ACCGroup_z2",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 24,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "246456e817215935",
        "type": "ui-group",
        "name": "gen4VelDisplGroup_y2",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 20,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d47dac8251b91244",
        "type": "ui-group",
        "name": "gen4VelDisplGroup_z2",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 26,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "b1e903e32269aa71",
        "type": "ui-group",
        "name": "gen4OneTwoThreeGroup_x2",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 16,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "029ec23ef73be07b",
        "type": "ui-group",
        "name": "gen4OneTwoThreeGroup_y2",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 22,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "47e67bb2414c9173",
        "type": "ui-group",
        "name": "gen4OneTwoThreeGroup_z2",
        "page": "3c148a5ec9b4b2b7",
        "width": "4",
        "height": 1,
        "order": 28,
        "showTitle": false,
        "className": "",
        "visible": false,
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e01eadf35316cb83",
        "type": "ui-theme",
        "name": "ncdTheme",
        "colors": {
            "surface": "#0099cc",
            "primary": "#0931fb",
            "bgPage": "#a3a7a8",
            "groupBg": "#84daf0",
            "groupOutline": "#9da2a4"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "10px"
        }
    },
    {
        "id": "e1296919e93ce7a9",
        "type": "subflow:74f0f072aba2913a",
        "z": "8d6c340fe8b3848d",
        "name": "",
        "x": 560,
        "y": 480,
        "wires": []
    },
    {
        "id": "21046febbf0a3571",
        "type": "global-config",
        "env": [],
        "modules": {
            "@flowfuse/node-red-dashboard": "1.28.0"
        }
    }
]
